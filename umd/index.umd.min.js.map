{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///index.umd.min.js","webpack:///webpack/bootstrap a076ff5ad545c7245000","webpack:///./lib/gbs.js","webpack:///./lib/utils/errors.js","webpack:///./lib/model/model.js","webpack:///./lib/gbb/gbb-reader.js","webpack:///./lib/grammar/grammar.js","webpack:///./lib/grammar/parser.js","webpack:///./lib/grammar/reserved-words.js","webpack:///./lib/grammar/scope.js","webpack:///./lib/lexer/lexer.js","webpack:///./lib/model/execution-context.js","webpack:///./lib/nodes/assignment.js","webpack:///./lib/nodes/binary-operations.js","webpack:///./lib/nodes/conditional-statements.js","webpack:///./lib/nodes/constant.js","webpack:///./lib/nodes/literals.js","webpack:///./lib/nodes/nodes.js","webpack:///./lib/nodes/primitive-functions.js","webpack:///./lib/nodes/primitive-procedures.js","webpack:///./lib/nodes/program-root.js","webpack:///./lib/nodes/repetition-statements.js","webpack:///./lib/nodes/routine-calls.js","webpack:///./lib/nodes/routine-declarations.js","webpack:///./lib/nodes/unary-operations.js","webpack:///./lib/nodes/variable.js","webpack:///./lib/utils/logger.js","webpack:///./lib/utils/string-utils.js"],"names":["root","factory","exports","module","define","amd","this","modules","hotDownloadUpdateChunk","chunkId","head","document","getElementsByTagName","script","createElement","type","charset","src","__webpack_require__","p","hotCurrentHash","appendChild","hotDownloadManifest","callback","XMLHttpRequest","Error","request","requestPath","open","timeout","send","err","onreadystatechange","readyState","status","update","JSON","parse","responseText","e","hotCreateRequire","moduleId","ensure","hotStatus","hotSetStatus","hotChunksLoading","finishChunkLoading","hotWaitingFilesMap","hotEnsureUpdateChunk","hotWaitingFiles","hotUpdateDownloaded","call","fn","me","installedModules","hot","active","parents","indexOf","push","children","hotCurrentParents","console","warn","name","Object","prototype","hasOwnProperty","canDefineProperty","defineProperty","configurable","enumerable","get","set","value","hotCreateModule","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","accept","dep","i","length","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","splice","check","hotCheck","apply","hotApply","l","hotStatusHandlers","addStatusHandler","removeStatusHandler","data","hotCurrentModuleData","newStatus","toModuleId","id","isNumber","hotApplyOnUpdate","hotRequestedFilesMap","hotAvailibleFilesMap","c","hotUpdateNewHash","h","hotCallback","hotUpdate","hotAddUpdateChunk","moreModules","outdatedModules","options","getAffectedStuff","outdatedDependencies","queue","slice","pop","parentId","parent","addAllToSet","a","b","item","appliedUpdate","result","ignoreUnaccepted","outdatedSelfAcceptedModules","errorHandler","disposeHandlers","j","cb","child","moduleOutdatedDependencies","dependency","error","callbacks","loaded","parentHotUpdateCallback","x","m","gbs","grammar","Parser","Lexer","node","errors","Context","Gbb","Reader","getParser","log","throwParserError","token","description","someError","on","throwInterpreterError","message","InterpreterException","Board","sizeX","sizeY","y","GobstonesError","blue","red","black","green","north","east","south","west","minDir","maxDir","minColor","maxColor","init","table","clone","putStone","color","dropStones","amount","removeStone","boom","clear","amountStones","canMove","vec","nextX","nextY","move","moveToEdge","printAscii","out","az","ro","ne","ve","stringUtils","gbbReader","fromString","gbbString","gbbCode","_try","rawLines","splitByLines","lines","filter","line","test","_buildBoard","dimensions","_getDimensions","header","_getHeader","board","_putCells","inner","match","_getPositionOf","CELL_REGEXP","cellLines","forEach","cell","position","_putBalls","bind","values","scan","getAmount","it","parseInt","source","element","map","thingToParse","TOKEN_NAMES","commaSeparatedArguments","parser","parameters","expression","advance","parameterListCall","parameterDeclarationList","g","arity","parenthesisExpression","bodyStatement","block","bodyStatementWithOptionalMultiline","statement","defineConstant","symbol","alias","nud","Constant","NumericLiteral","Variable","op","OrOperation","AndOperation","SumOperation","DiffOperation","MulOperation","DIV","DivOperation","MOD","ModOperation","infixr","left","ExpOperation","prefix","NOT","NotOperation","SubstractionOperation","EqOperation","NotEqualOperation","LessOperation","GraterOperation","LessEqualOperation","GreaterEqualOperation","FALSE","BOOLEAN","TRUE","BLUE","COLOR","RED","BLACK","GREEN","NORTH","DIRECTION","SOUTH","EAST","WEST","IN","ELSE","TO","separator","stmt","infix","toUpperCase","ProcedureCall","scope","find","FunctionCall","Assignment","DROP","PutStone","GRAB","RemoveStone","MOVE","MoveClaw","MOVE_TO_EDGE","MoveToEdge","CLEAN_BOARD","CleanBoard","BOOM","Boom","HAS_STONES","HasStones","NUM_STONES","NumStones","MAX_COLOR","MaxColor","MIN_COLOR","MinColor","MAX_DIR","MaxDir","MIN_DIR","MinDir","MAX_BOOL","MaxBool","MIN_BOOL","MinBool","CAN_MOVE","CanMove","IF","condition","trueBranch","falseBranch","reserve","If","SWITCH","cases","exp","body","case","tokens","hasNext","Switch","WHILE","While","REPEAT","Repeat","FOR_EACH","iterator","items","ForEach","statements","PROGRAM","Program","FUNCTION","newScope","toLowerCase","ret","RETURN","declaration","FunctionDeclaration","ReturnStatement","PROCEDURE","ProcedureDeclaration","input","main","declarations","roots","parseProgram","Root","throwUndefinedSymbolError","throwMissingOperatorError","Scope","OriginalSymbol","led","lexer","symbolTable","bindingPower","s","lbp","rightBindingPower","t","o","v","lastToken","range","start","lastRange","next","create","bp","OpDefinition","n","std","statementsList","_currentRange","_applyRangeToSymbol","end","rootDeclaration","f","self","right","_parseContextAwareNode","nodeParser","parseExpression","parseStatements","THEN","OPPOSITE","NEXT","PREVIOUS","NUMBER","itself","def","identifier","reserved","targetToken","suffix","from","startColumn","endColumn","row","punctuators","buf","buflen","_isNewline","_isDigit","_isAlpha","_isAlphanum","_skipNonTokens","current","nextChar","TokenTypes","IDENTIFIER","OPERATOR","EOF","COMMENT","NEWLINE","_refreshCurrentAndNextChars","_processComment","_processIdentifier","_consume","_processOperator","_processNumber","_processError","_make","column","text","substring","newToken","charAt","_increaseFrom","_processMultiCharOperator","_incrementStep","_resetColumnCount","chars","_processSingleLineComment","_processMultiLineComment","variablesStack","boardsStack","currentBoard","currentVariables","nativeRepresentations","put","key","all","startContext","stopContext","pushBoard","popBoard","constants","STM","interpret","context","eval","defineBinaryOperation","className","BinaryOperation","BINARY","Math","floor","pow","interpretBlock","NUMERIC_LITERAL","EXPRESSION","program","evalArguments","results","fillParameters","declarationProvider","target","parameterValues","return","returnExpression","doNothing","string","split","regExp","global","r","exec","shift"],"mappings":"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","file":"index.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gsWeblangCore\"] = factory();\n\telse\n\t\troot[\"gsWeblangCore\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"gsWeblangCore\"] = factory();\n\telse\n\t\troot[\"gsWeblangCore\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \tvar parentHotUpdateCallback = this[\"webpackHotUpdategsWeblangCore\"];\n/******/ \tthis[\"webpackHotUpdategsWeblangCore\"] = function webpackHotUpdateCallback(chunkId, moreModules) { // eslint-disable-line no-unused-vars\n/******/ \t\thotAddUpdateChunk(chunkId, moreModules);\n/******/ \t\tif(parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n/******/ \t}\n/******/\n/******/ \tfunction hotDownloadUpdateChunk(chunkId) { // eslint-disable-line no-unused-vars\n/******/ \t\tvar head = document.getElementsByTagName(\"head\")[0];\n/******/ \t\tvar script = document.createElement(\"script\");\n/******/ \t\tscript.type = \"text/javascript\";\n/******/ \t\tscript.charset = \"utf-8\";\n/******/ \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\n/******/ \t\thead.appendChild(script);\n/******/ \t}\n/******/\n/******/ \tfunction hotDownloadManifest(callback) { // eslint-disable-line no-unused-vars\n/******/ \t\tif(typeof XMLHttpRequest === \"undefined\")\n/******/ \t\t\treturn callback(new Error(\"No browser support\"));\n/******/ \t\ttry {\n/******/ \t\t\tvar request = new XMLHttpRequest();\n/******/ \t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\n/******/ \t\t\trequest.open(\"GET\", requestPath, true);\n/******/ \t\t\trequest.timeout = 10000;\n/******/ \t\t\trequest.send(null);\n/******/ \t\t} catch(err) {\n/******/ \t\t\treturn callback(err);\n/******/ \t\t}\n/******/ \t\trequest.onreadystatechange = function() {\n/******/ \t\t\tif(request.readyState !== 4) return;\n/******/ \t\t\tif(request.status === 0) {\n/******/ \t\t\t\t// timeout\n/******/ \t\t\t\tcallback(new Error(\"Manifest request to \" + requestPath + \" timed out.\"));\n/******/ \t\t\t} else if(request.status === 404) {\n/******/ \t\t\t\t// no update available\n/******/ \t\t\t\tcallback();\n/******/ \t\t\t} else if(request.status !== 200 && request.status !== 304) {\n/******/ \t\t\t\t// other failure\n/******/ \t\t\t\tcallback(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n/******/ \t\t\t} else {\n/******/ \t\t\t\t// success\n/******/ \t\t\t\ttry {\n/******/ \t\t\t\t\tvar update = JSON.parse(request.responseText);\n/******/ \t\t\t\t} catch(e) {\n/******/ \t\t\t\t\tcallback(e);\n/******/ \t\t\t\t\treturn;\n/******/ \t\t\t\t}\n/******/ \t\t\t\tcallback(null, update);\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}\n/******/\n/******/\n/******/ \t// Copied from https://github.com/facebook/react/blob/bef45b0/src/shared/utils/canDefineProperty.js\n/******/ \tvar canDefineProperty = false;\n/******/ \ttry {\n/******/ \t\tObject.defineProperty({}, \"x\", {\n/******/ \t\t\tget: function() {}\n/******/ \t\t});\n/******/ \t\tcanDefineProperty = true;\n/******/ \t} catch(x) {\n/******/ \t\t// IE will fail on defineProperty\n/******/ \t}\n/******/\n/******/ \tvar hotApplyOnUpdate = true;\n/******/ \tvar hotCurrentHash = \"a076ff5ad545c7245000\"; // eslint-disable-line no-unused-vars\n/******/ \tvar hotCurrentModuleData = {};\n/******/ \tvar hotCurrentParents = []; // eslint-disable-line no-unused-vars\n/******/\n/******/ \tfunction hotCreateRequire(moduleId) { // eslint-disable-line no-unused-vars\n/******/ \t\tvar me = installedModules[moduleId];\n/******/ \t\tif(!me) return __webpack_require__;\n/******/ \t\tvar fn = function(request) {\n/******/ \t\t\tif(me.hot.active) {\n/******/ \t\t\t\tif(installedModules[request]) {\n/******/ \t\t\t\t\tif(installedModules[request].parents.indexOf(moduleId) < 0)\n/******/ \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n/******/ \t\t\t\t\tif(me.children.indexOf(request) < 0)\n/******/ \t\t\t\t\t\tme.children.push(request);\n/******/ \t\t\t\t} else hotCurrentParents = [moduleId];\n/******/ \t\t\t} else {\n/******/ \t\t\t\tconsole.warn(\"[HMR] unexpected require(\" + request + \") from disposed module \" + moduleId);\n/******/ \t\t\t\thotCurrentParents = [];\n/******/ \t\t\t}\n/******/ \t\t\treturn __webpack_require__(request);\n/******/ \t\t};\n/******/ \t\tfor(var name in __webpack_require__) {\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(__webpack_require__, name)) {\n/******/ \t\t\t\tif(canDefineProperty) {\n/******/ \t\t\t\t\tObject.defineProperty(fn, name, (function(name) {\n/******/ \t\t\t\t\t\treturn {\n/******/ \t\t\t\t\t\t\tconfigurable: true,\n/******/ \t\t\t\t\t\t\tenumerable: true,\n/******/ \t\t\t\t\t\t\tget: function() {\n/******/ \t\t\t\t\t\t\t\treturn __webpack_require__[name];\n/******/ \t\t\t\t\t\t\t},\n/******/ \t\t\t\t\t\t\tset: function(value) {\n/******/ \t\t\t\t\t\t\t\t__webpack_require__[name] = value;\n/******/ \t\t\t\t\t\t\t}\n/******/ \t\t\t\t\t\t};\n/******/ \t\t\t\t\t}(name)));\n/******/ \t\t\t\t} else {\n/******/ \t\t\t\t\tfn[name] = __webpack_require__[name];\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t}\n/******/\n/******/ \t\tfunction ensure(chunkId, callback) {\n/******/ \t\t\tif(hotStatus === \"ready\")\n/******/ \t\t\t\thotSetStatus(\"prepare\");\n/******/ \t\t\thotChunksLoading++;\n/******/ \t\t\t__webpack_require__.e(chunkId, function() {\n/******/ \t\t\t\ttry {\n/******/ \t\t\t\t\tcallback.call(null, fn);\n/******/ \t\t\t\t} finally {\n/******/ \t\t\t\t\tfinishChunkLoading();\n/******/ \t\t\t\t}\n/******/\n/******/ \t\t\t\tfunction finishChunkLoading() {\n/******/ \t\t\t\t\thotChunksLoading--;\n/******/ \t\t\t\t\tif(hotStatus === \"prepare\") {\n/******/ \t\t\t\t\t\tif(!hotWaitingFilesMap[chunkId]) {\n/******/ \t\t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n/******/ \t\t\t\t\t\t}\n/******/ \t\t\t\t\t\tif(hotChunksLoading === 0 && hotWaitingFiles === 0) {\n/******/ \t\t\t\t\t\t\thotUpdateDownloaded();\n/******/ \t\t\t\t\t\t}\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t}\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t\tif(canDefineProperty) {\n/******/ \t\t\tObject.defineProperty(fn, \"e\", {\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tvalue: ensure\n/******/ \t\t\t});\n/******/ \t\t} else {\n/******/ \t\t\tfn.e = ensure;\n/******/ \t\t}\n/******/ \t\treturn fn;\n/******/ \t}\n/******/\n/******/ \tfunction hotCreateModule(moduleId) { // eslint-disable-line no-unused-vars\n/******/ \t\tvar hot = {\n/******/ \t\t\t// private stuff\n/******/ \t\t\t_acceptedDependencies: {},\n/******/ \t\t\t_declinedDependencies: {},\n/******/ \t\t\t_selfAccepted: false,\n/******/ \t\t\t_selfDeclined: false,\n/******/ \t\t\t_disposeHandlers: [],\n/******/\n/******/ \t\t\t// Module API\n/******/ \t\t\tactive: true,\n/******/ \t\t\taccept: function(dep, callback) {\n/******/ \t\t\t\tif(typeof dep === \"undefined\")\n/******/ \t\t\t\t\thot._selfAccepted = true;\n/******/ \t\t\t\telse if(typeof dep === \"function\")\n/******/ \t\t\t\t\thot._selfAccepted = dep;\n/******/ \t\t\t\telse if(typeof dep === \"object\")\n/******/ \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\n/******/ \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback;\n/******/ \t\t\t\telse\n/******/ \t\t\t\t\thot._acceptedDependencies[dep] = callback;\n/******/ \t\t\t},\n/******/ \t\t\tdecline: function(dep) {\n/******/ \t\t\t\tif(typeof dep === \"undefined\")\n/******/ \t\t\t\t\thot._selfDeclined = true;\n/******/ \t\t\t\telse if(typeof dep === \"number\")\n/******/ \t\t\t\t\thot._declinedDependencies[dep] = true;\n/******/ \t\t\t\telse\n/******/ \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\n/******/ \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n/******/ \t\t\t},\n/******/ \t\t\tdispose: function(callback) {\n/******/ \t\t\t\thot._disposeHandlers.push(callback);\n/******/ \t\t\t},\n/******/ \t\t\taddDisposeHandler: function(callback) {\n/******/ \t\t\t\thot._disposeHandlers.push(callback);\n/******/ \t\t\t},\n/******/ \t\t\tremoveDisposeHandler: function(callback) {\n/******/ \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n/******/ \t\t\t\tif(idx >= 0) hot._disposeHandlers.splice(idx, 1);\n/******/ \t\t\t},\n/******/\n/******/ \t\t\t// Management API\n/******/ \t\t\tcheck: hotCheck,\n/******/ \t\t\tapply: hotApply,\n/******/ \t\t\tstatus: function(l) {\n/******/ \t\t\t\tif(!l) return hotStatus;\n/******/ \t\t\t\thotStatusHandlers.push(l);\n/******/ \t\t\t},\n/******/ \t\t\taddStatusHandler: function(l) {\n/******/ \t\t\t\thotStatusHandlers.push(l);\n/******/ \t\t\t},\n/******/ \t\t\tremoveStatusHandler: function(l) {\n/******/ \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n/******/ \t\t\t\tif(idx >= 0) hotStatusHandlers.splice(idx, 1);\n/******/ \t\t\t},\n/******/\n/******/ \t\t\t//inherit from previous dispose call\n/******/ \t\t\tdata: hotCurrentModuleData[moduleId]\n/******/ \t\t};\n/******/ \t\treturn hot;\n/******/ \t}\n/******/\n/******/ \tvar hotStatusHandlers = [];\n/******/ \tvar hotStatus = \"idle\";\n/******/\n/******/ \tfunction hotSetStatus(newStatus) {\n/******/ \t\thotStatus = newStatus;\n/******/ \t\tfor(var i = 0; i < hotStatusHandlers.length; i++)\n/******/ \t\t\thotStatusHandlers[i].call(null, newStatus);\n/******/ \t}\n/******/\n/******/ \t// while downloading\n/******/ \tvar hotWaitingFiles = 0;\n/******/ \tvar hotChunksLoading = 0;\n/******/ \tvar hotWaitingFilesMap = {};\n/******/ \tvar hotRequestedFilesMap = {};\n/******/ \tvar hotAvailibleFilesMap = {};\n/******/ \tvar hotCallback;\n/******/\n/******/ \t// The update info\n/******/ \tvar hotUpdate, hotUpdateNewHash;\n/******/\n/******/ \tfunction toModuleId(id) {\n/******/ \t\tvar isNumber = (+id) + \"\" === id;\n/******/ \t\treturn isNumber ? +id : id;\n/******/ \t}\n/******/\n/******/ \tfunction hotCheck(apply, callback) {\n/******/ \t\tif(hotStatus !== \"idle\") throw new Error(\"check() is only allowed in idle status\");\n/******/ \t\tif(typeof apply === \"function\") {\n/******/ \t\t\thotApplyOnUpdate = false;\n/******/ \t\t\tcallback = apply;\n/******/ \t\t} else {\n/******/ \t\t\thotApplyOnUpdate = apply;\n/******/ \t\t\tcallback = callback || function(err) {\n/******/ \t\t\t\tif(err) throw err;\n/******/ \t\t\t};\n/******/ \t\t}\n/******/ \t\thotSetStatus(\"check\");\n/******/ \t\thotDownloadManifest(function(err, update) {\n/******/ \t\t\tif(err) return callback(err);\n/******/ \t\t\tif(!update) {\n/******/ \t\t\t\thotSetStatus(\"idle\");\n/******/ \t\t\t\tcallback(null, null);\n/******/ \t\t\t\treturn;\n/******/ \t\t\t}\n/******/\n/******/ \t\t\thotRequestedFilesMap = {};\n/******/ \t\t\thotAvailibleFilesMap = {};\n/******/ \t\t\thotWaitingFilesMap = {};\n/******/ \t\t\tfor(var i = 0; i < update.c.length; i++)\n/******/ \t\t\t\thotAvailibleFilesMap[update.c[i]] = true;\n/******/ \t\t\thotUpdateNewHash = update.h;\n/******/\n/******/ \t\t\thotSetStatus(\"prepare\");\n/******/ \t\t\thotCallback = callback;\n/******/ \t\t\thotUpdate = {};\n/******/ \t\t\tvar chunkId = 0;\n/******/ \t\t\t{ // eslint-disable-line no-lone-blocks\n/******/ \t\t\t\t/*globals chunkId */\n/******/ \t\t\t\thotEnsureUpdateChunk(chunkId);\n/******/ \t\t\t}\n/******/ \t\t\tif(hotStatus === \"prepare\" && hotChunksLoading === 0 && hotWaitingFiles === 0) {\n/******/ \t\t\t\thotUpdateDownloaded();\n/******/ \t\t\t}\n/******/ \t\t});\n/******/ \t}\n/******/\n/******/ \tfunction hotAddUpdateChunk(chunkId, moreModules) { // eslint-disable-line no-unused-vars\n/******/ \t\tif(!hotAvailibleFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n/******/ \t\t\treturn;\n/******/ \t\thotRequestedFilesMap[chunkId] = false;\n/******/ \t\tfor(var moduleId in moreModules) {\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n/******/ \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n/******/ \t\t\t}\n/******/ \t\t}\n/******/ \t\tif(--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n/******/ \t\t\thotUpdateDownloaded();\n/******/ \t\t}\n/******/ \t}\n/******/\n/******/ \tfunction hotEnsureUpdateChunk(chunkId) {\n/******/ \t\tif(!hotAvailibleFilesMap[chunkId]) {\n/******/ \t\t\thotWaitingFilesMap[chunkId] = true;\n/******/ \t\t} else {\n/******/ \t\t\thotRequestedFilesMap[chunkId] = true;\n/******/ \t\t\thotWaitingFiles++;\n/******/ \t\t\thotDownloadUpdateChunk(chunkId);\n/******/ \t\t}\n/******/ \t}\n/******/\n/******/ \tfunction hotUpdateDownloaded() {\n/******/ \t\thotSetStatus(\"ready\");\n/******/ \t\tvar callback = hotCallback;\n/******/ \t\thotCallback = null;\n/******/ \t\tif(!callback) return;\n/******/ \t\tif(hotApplyOnUpdate) {\n/******/ \t\t\thotApply(hotApplyOnUpdate, callback);\n/******/ \t\t} else {\n/******/ \t\t\tvar outdatedModules = [];\n/******/ \t\t\tfor(var id in hotUpdate) {\n/******/ \t\t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n/******/ \t\t\t\t\toutdatedModules.push(toModuleId(id));\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t\tcallback(null, outdatedModules);\n/******/ \t\t}\n/******/ \t}\n/******/\n/******/ \tfunction hotApply(options, callback) {\n/******/ \t\tif(hotStatus !== \"ready\") throw new Error(\"apply() is only allowed in ready status\");\n/******/ \t\tif(typeof options === \"function\") {\n/******/ \t\t\tcallback = options;\n/******/ \t\t\toptions = {};\n/******/ \t\t} else if(options && typeof options === \"object\") {\n/******/ \t\t\tcallback = callback || function(err) {\n/******/ \t\t\t\tif(err) throw err;\n/******/ \t\t\t};\n/******/ \t\t} else {\n/******/ \t\t\toptions = {};\n/******/ \t\t\tcallback = callback || function(err) {\n/******/ \t\t\t\tif(err) throw err;\n/******/ \t\t\t};\n/******/ \t\t}\n/******/\n/******/ \t\tfunction getAffectedStuff(module) {\n/******/ \t\t\tvar outdatedModules = [module];\n/******/ \t\t\tvar outdatedDependencies = {};\n/******/\n/******/ \t\t\tvar queue = outdatedModules.slice();\n/******/ \t\t\twhile(queue.length > 0) {\n/******/ \t\t\t\tvar moduleId = queue.pop();\n/******/ \t\t\t\tvar module = installedModules[moduleId];\n/******/ \t\t\t\tif(!module || module.hot._selfAccepted)\n/******/ \t\t\t\t\tcontinue;\n/******/ \t\t\t\tif(module.hot._selfDeclined) {\n/******/ \t\t\t\t\treturn new Error(\"Aborted because of self decline: \" + moduleId);\n/******/ \t\t\t\t}\n/******/ \t\t\t\tif(moduleId === 0) {\n/******/ \t\t\t\t\treturn;\n/******/ \t\t\t\t}\n/******/ \t\t\t\tfor(var i = 0; i < module.parents.length; i++) {\n/******/ \t\t\t\t\tvar parentId = module.parents[i];\n/******/ \t\t\t\t\tvar parent = installedModules[parentId];\n/******/ \t\t\t\t\tif(parent.hot._declinedDependencies[moduleId]) {\n/******/ \t\t\t\t\t\treturn new Error(\"Aborted because of declined dependency: \" + moduleId + \" in \" + parentId);\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t\tif(outdatedModules.indexOf(parentId) >= 0) continue;\n/******/ \t\t\t\t\tif(parent.hot._acceptedDependencies[moduleId]) {\n/******/ \t\t\t\t\t\tif(!outdatedDependencies[parentId])\n/******/ \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n/******/ \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n/******/ \t\t\t\t\t\tcontinue;\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t\tdelete outdatedDependencies[parentId];\n/******/ \t\t\t\t\toutdatedModules.push(parentId);\n/******/ \t\t\t\t\tqueue.push(parentId);\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/\n/******/ \t\t\treturn [outdatedModules, outdatedDependencies];\n/******/ \t\t}\n/******/\n/******/ \t\tfunction addAllToSet(a, b) {\n/******/ \t\t\tfor(var i = 0; i < b.length; i++) {\n/******/ \t\t\t\tvar item = b[i];\n/******/ \t\t\t\tif(a.indexOf(item) < 0)\n/******/ \t\t\t\t\ta.push(item);\n/******/ \t\t\t}\n/******/ \t\t}\n/******/\n/******/ \t\t// at begin all updates modules are outdated\n/******/ \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n/******/ \t\tvar outdatedDependencies = {};\n/******/ \t\tvar outdatedModules = [];\n/******/ \t\tvar appliedUpdate = {};\n/******/ \t\tfor(var id in hotUpdate) {\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n/******/ \t\t\t\tvar moduleId = toModuleId(id);\n/******/ \t\t\t\tvar result = getAffectedStuff(moduleId);\n/******/ \t\t\t\tif(!result) {\n/******/ \t\t\t\t\tif(options.ignoreUnaccepted)\n/******/ \t\t\t\t\t\tcontinue;\n/******/ \t\t\t\t\thotSetStatus(\"abort\");\n/******/ \t\t\t\t\treturn callback(new Error(\"Aborted because \" + moduleId + \" is not accepted\"));\n/******/ \t\t\t\t}\n/******/ \t\t\t\tif(result instanceof Error) {\n/******/ \t\t\t\t\thotSetStatus(\"abort\");\n/******/ \t\t\t\t\treturn callback(result);\n/******/ \t\t\t\t}\n/******/ \t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n/******/ \t\t\t\taddAllToSet(outdatedModules, result[0]);\n/******/ \t\t\t\tfor(var moduleId in result[1]) {\n/******/ \t\t\t\t\tif(Object.prototype.hasOwnProperty.call(result[1], moduleId)) {\n/******/ \t\t\t\t\t\tif(!outdatedDependencies[moduleId])\n/******/ \t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n/******/ \t\t\t\t\t\taddAllToSet(outdatedDependencies[moduleId], result[1][moduleId]);\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t}\n/******/\n/******/ \t\t// Store self accepted outdated modules to require them later by the module system\n/******/ \t\tvar outdatedSelfAcceptedModules = [];\n/******/ \t\tfor(var i = 0; i < outdatedModules.length; i++) {\n/******/ \t\t\tvar moduleId = outdatedModules[i];\n/******/ \t\t\tif(installedModules[moduleId] && installedModules[moduleId].hot._selfAccepted)\n/******/ \t\t\t\toutdatedSelfAcceptedModules.push({\n/******/ \t\t\t\t\tmodule: moduleId,\n/******/ \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n/******/ \t\t\t\t});\n/******/ \t\t}\n/******/\n/******/ \t\t// Now in \"dispose\" phase\n/******/ \t\thotSetStatus(\"dispose\");\n/******/ \t\tvar queue = outdatedModules.slice();\n/******/ \t\twhile(queue.length > 0) {\n/******/ \t\t\tvar moduleId = queue.pop();\n/******/ \t\t\tvar module = installedModules[moduleId];\n/******/ \t\t\tif(!module) continue;\n/******/\n/******/ \t\t\tvar data = {};\n/******/\n/******/ \t\t\t// Call dispose handlers\n/******/ \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n/******/ \t\t\tfor(var j = 0; j < disposeHandlers.length; j++) {\n/******/ \t\t\t\tvar cb = disposeHandlers[j];\n/******/ \t\t\t\tcb(data);\n/******/ \t\t\t}\n/******/ \t\t\thotCurrentModuleData[moduleId] = data;\n/******/\n/******/ \t\t\t// disable module (this disables requires from this module)\n/******/ \t\t\tmodule.hot.active = false;\n/******/\n/******/ \t\t\t// remove module from cache\n/******/ \t\t\tdelete installedModules[moduleId];\n/******/\n/******/ \t\t\t// remove \"parents\" references from all children\n/******/ \t\t\tfor(var j = 0; j < module.children.length; j++) {\n/******/ \t\t\t\tvar child = installedModules[module.children[j]];\n/******/ \t\t\t\tif(!child) continue;\n/******/ \t\t\t\tvar idx = child.parents.indexOf(moduleId);\n/******/ \t\t\t\tif(idx >= 0) {\n/******/ \t\t\t\t\tchild.parents.splice(idx, 1);\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t}\n/******/\n/******/ \t\t// remove outdated dependency from module children\n/******/ \t\tfor(var moduleId in outdatedDependencies) {\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\n/******/ \t\t\t\tvar module = installedModules[moduleId];\n/******/ \t\t\t\tvar moduleOutdatedDependencies = outdatedDependencies[moduleId];\n/******/ \t\t\t\tfor(var j = 0; j < moduleOutdatedDependencies.length; j++) {\n/******/ \t\t\t\t\tvar dependency = moduleOutdatedDependencies[j];\n/******/ \t\t\t\t\tvar idx = module.children.indexOf(dependency);\n/******/ \t\t\t\t\tif(idx >= 0) module.children.splice(idx, 1);\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t}\n/******/\n/******/ \t\t// Not in \"apply\" phase\n/******/ \t\thotSetStatus(\"apply\");\n/******/\n/******/ \t\thotCurrentHash = hotUpdateNewHash;\n/******/\n/******/ \t\t// insert new code\n/******/ \t\tfor(var moduleId in appliedUpdate) {\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n/******/ \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n/******/ \t\t\t}\n/******/ \t\t}\n/******/\n/******/ \t\t// call accept handlers\n/******/ \t\tvar error = null;\n/******/ \t\tfor(var moduleId in outdatedDependencies) {\n/******/ \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\n/******/ \t\t\t\tvar module = installedModules[moduleId];\n/******/ \t\t\t\tvar moduleOutdatedDependencies = outdatedDependencies[moduleId];\n/******/ \t\t\t\tvar callbacks = [];\n/******/ \t\t\t\tfor(var i = 0; i < moduleOutdatedDependencies.length; i++) {\n/******/ \t\t\t\t\tvar dependency = moduleOutdatedDependencies[i];\n/******/ \t\t\t\t\tvar cb = module.hot._acceptedDependencies[dependency];\n/******/ \t\t\t\t\tif(callbacks.indexOf(cb) >= 0) continue;\n/******/ \t\t\t\t\tcallbacks.push(cb);\n/******/ \t\t\t\t}\n/******/ \t\t\t\tfor(var i = 0; i < callbacks.length; i++) {\n/******/ \t\t\t\t\tvar cb = callbacks[i];\n/******/ \t\t\t\t\ttry {\n/******/ \t\t\t\t\t\tcb(outdatedDependencies);\n/******/ \t\t\t\t\t} catch(err) {\n/******/ \t\t\t\t\t\tif(!error)\n/******/ \t\t\t\t\t\t\terror = err;\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t}\n/******/\n/******/ \t\t// Load self accepted modules\n/******/ \t\tfor(var i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n/******/ \t\t\tvar item = outdatedSelfAcceptedModules[i];\n/******/ \t\t\tvar moduleId = item.module;\n/******/ \t\t\thotCurrentParents = [moduleId];\n/******/ \t\t\ttry {\n/******/ \t\t\t\t__webpack_require__(moduleId);\n/******/ \t\t\t} catch(err) {\n/******/ \t\t\t\tif(typeof item.errorHandler === \"function\") {\n/******/ \t\t\t\t\ttry {\n/******/ \t\t\t\t\t\titem.errorHandler(err);\n/******/ \t\t\t\t\t} catch(err) {\n/******/ \t\t\t\t\t\tif(!error)\n/******/ \t\t\t\t\t\t\terror = err;\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t} else if(!error)\n/******/ \t\t\t\t\terror = err;\n/******/ \t\t\t}\n/******/ \t\t}\n/******/\n/******/ \t\t// handle errors in accept handlers and self accepted module load\n/******/ \t\tif(error) {\n/******/ \t\t\thotSetStatus(\"fail\");\n/******/ \t\t\treturn callback(error);\n/******/ \t\t}\n/******/\n/******/ \t\thotSetStatus(\"idle\");\n/******/ \t\tcallback(null, outdatedModules);\n/******/ \t}\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false,\n/******/ \t\t\thot: hotCreateModule(moduleId),\n/******/ \t\t\tparents: hotCurrentParents,\n/******/ \t\t\tchildren: []\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// __webpack_hash__\n/******/ \t__webpack_require__.h = function() { return hotCurrentHash; };\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn hotCreateRequire(0)(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar gbs = {};\n\tvar grammar = __webpack_require__(4);\n\tgbs.Parser = __webpack_require__(5);\n\tgbs.Lexer = __webpack_require__(8);\n\tgbs.node = __webpack_require__(15);\n\tgbs.errors = __webpack_require__(1);\n\tgbs.Context = __webpack_require__(9);\n\tgbs.Gbb = {\n\t    Reader: __webpack_require__(3)\n\t};\n\t\n\tgbs.getParser = function () {\n\t    return grammar(gbs);\n\t};\n\t\n\tmodule.exports = gbs;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar log = __webpack_require__(24);\n\t\n\tvar errors = {};\n\t\n\terrors.throwParserError = function (token, description) {\n\t    var someError = {error: description, on: token};\n\t    log('PARSER ERROR: ', someError);\n\t    throw someError;\n\t};\n\t\n\terrors.throwInterpreterError = function (token, message) {\n\t    throw new errors.InterpreterException(message, token);\n\t};\n\t\n\terrors.InterpreterException = function (message, on) {\n\t    this.message = message;\n\t    this.on = on;\n\t};\n\terrors.InterpreterException.prototype = new Error();\n\t\n\tmodule.exports = errors;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tvar GobstonesError = function (message) {\n\t    this.message = message;\n\t};\n\tGobstonesError.prototype = new Error('BOOM');\n\t\n\tfunction Board(sizeX, sizeY) {\n\t    this.x = 0;\n\t    this.y = 0;\n\t\n\t    this.sizeX = sizeX;\n\t    this.sizeY = sizeY;\n\t}\n\t\n\tBoard.blue = 0;\n\tBoard.red = 1;\n\tBoard.black = 2;\n\tBoard.green = 3;\n\t\n\tBoard.north = [0, 1];\n\tBoard.east = [1, 0];\n\tBoard.south = [0, -1];\n\tBoard.west = [-1, 0];\n\t\n\tBoard.minDir = Board.north;\n\tBoard.maxDir = Board.west;\n\tBoard.minColor = Board.blue;\n\tBoard.maxColor = Board.green;\n\t\n\tBoard.prototype.init = function () {\n\t    this.table = [[], [], [], []];\n\t    for (var i = 0; i < this.sizeX; i++) {\n\t        this.table[0][i] = [];\n\t        this.table[1][i] = [];\n\t        this.table[2][i] = [];\n\t        this.table[3][i] = [];\n\t        for (var j = 0; j < this.sizeY; j++) {\n\t            this.table[0][i][j] = 0;\n\t            this.table[1][i][j] = 0;\n\t            this.table[2][i][j] = 0;\n\t            this.table[3][i][j] = 0;\n\t        }\n\t    }\n\t};\n\t\n\tBoard.prototype.clone = function () {\n\t    var c = new Board(this.sizeX, this.sizeY);\n\t    c.init();\n\t    for (var i = 0; i < this.sizeX; i++) {\n\t        c.table[0][i] = [];\n\t        c.table[1][i] = [];\n\t        c.table[2][i] = [];\n\t        c.table[3][i] = [];\n\t        for (var j = 0; j < this.sizeY; j++) {\n\t            c.table[0][i][j] = this.table[0][i][j];\n\t            c.table[1][i][j] = this.table[1][i][j];\n\t            c.table[2][i][j] = this.table[2][i][j];\n\t            c.table[3][i][j] = this.table[3][i][j];\n\t        }\n\t    }\n\t    c.x = this.x;\n\t    c.y = this.y;\n\t    return c;\n\t};\n\t\n\tBoard.prototype.putStone = function (color) {\n\t    this.dropStones(color, 1);\n\t};\n\t\n\tBoard.prototype.dropStones = function (color, amount) {\n\t    this.table[color][this.x][this.y] += amount;\n\t};\n\t\n\tBoard.prototype.removeStone = function (color) {\n\t    if (this.table[color][this.x][this.y] <= 0) {\n\t        throw new GobstonesError('Se intentó sacar una bolita pero ya no quedaban bolitas para sacar');\n\t    }\n\t    this.table[color][this.x][this.y] -= 1;\n\t};\n\t\n\tBoard.prototype.boom = function () {\n\t    throw new GobstonesError('BOOM!');\n\t};\n\t\n\tBoard.prototype.clear = function () {\n\t    this.init();\n\t};\n\t\n\tBoard.prototype.amountStones = function (color) {\n\t    return this.table[color][this.x][this.y];\n\t};\n\t\n\tBoard.prototype.canMove = function (vec) {\n\t    var nextX = this.x + vec[0];\n\t    var nextY = this.y + vec[1];\n\t    return nextX < this.sizeX && nextX >= 0 && nextY < this.sizeY && nextY >= 0;\n\t};\n\t\n\tBoard.prototype.move = function (vec) {\n\t    if (!this.canMove(vec)) {\n\t        throw new GobstonesError('Te caiste del tablero por: x=' + this.x + ' y=' + this.y);\n\t    }\n\t    this.x += vec[0];\n\t    this.y += vec[1];\n\t};\n\t\n\tBoard.prototype.moveToEdge = function (vec) {\n\t    if (vec[0] === 1) {\n\t        this.x = this.sizeX - 1;\n\t    } else if (vec[0] === -1) {\n\t        this.x = 0;\n\t    } else if (vec[1] === 1) {\n\t        this.y = this.sizeY - 1;\n\t    } else if (vec[1] === -1) {\n\t        this.y = 0;\n\t    }\n\t};\n\t\n\tBoard.prototype.printAscii = function () {\n\t    var out = this.sizeX + 'x' + this.sizeY + '\\n';\n\t    var az = this.table[0];\n\t    var ro = this.table[1];\n\t    var ne = this.table[2];\n\t    var ve = this.table[3];\n\t    for (var j = this.sizeY - 1; j >= 0; j--) {\n\t        for (var i = 0; i < this.sizeX; i++) {\n\t            out += (az[i][j] || ro[i][j] || ne[i][j] || ve[i][j]) ? '#' : '.';\n\t        }\n\t        out += '\\n';\n\t    }\n\t    return out;\n\t};\n\t\n\tmodule.exports = Board;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Board = __webpack_require__(2);\n\tvar stringUtils = __webpack_require__(25);\n\t\n\tvar gbbReader = {\n\t};\n\t\n\tgbbReader.fromString = function (gbbString) {\n\t    var gbbCode = this._try(gbbString);\n\t\n\t    var rawLines = stringUtils.splitByLines(gbbCode);\n\t    var lines = rawLines.filter(function (line) {\n\t        return !/^GBB\\/(\\d\\.)+\\d$/.test(line) && line !== '';\n\t    });\n\t\n\t    return this._buildBoard(lines);\n\t};\n\t\n\tgbbReader._buildBoard = function (lines) {\n\t    var dimensions = this._getDimensions(lines);\n\t    var header = this._getHeader(lines);\n\t\n\t    try {\n\t        var board = new Board(dimensions[0], dimensions[1]);\n\t        board.init();\n\t        this._putCells(lines, board);\n\t        board.x = header[0];\n\t        board.y = header[1];\n\t\n\t        return board;\n\t    } catch (err) {\n\t        var error = new Error('Error building the board');\n\t        error.inner = err;\n\t        throw error;\n\t    }\n\t};\n\t\n\tgbbReader._getDimensions = function (lines) {\n\t    var dimensions = this._try(\n\t        lines[0].match(/^size (\\d+) (\\d+)$/)\n\t    , 'dimensions');\n\t    return this._getPositionOf(dimensions);\n\t};\n\t\n\tgbbReader._getHeader = function (lines) {\n\t    var header = this._try(\n\t        lines[lines.length - 1].match(/^head (\\d+) (\\d+)$/)\n\t    , 'header');\n\t    return this._getPositionOf(header);\n\t};\n\t\n\tgbbReader._putCells = function (lines, board) {\n\t    var CELL_REGEXP = /^cell (\\d+) (\\d+)/;\n\t\n\t    var cellLines = lines.filter(function (line) {\n\t        return CELL_REGEXP.test(line);\n\t    });\n\t\n\t    cellLines.forEach(function (line) {\n\t        var cell = line.match(CELL_REGEXP);\n\t        var position = this._getPositionOf(cell, line);\n\t\n\t        board.x = position[0];\n\t        board.y = position[1];\n\t        this._putBalls(line, board);\n\t    }.bind(this));\n\t};\n\t\n\tgbbReader._putBalls = function (line, board) {\n\t    var values = stringUtils.scan(line, /(Azul|Negro|Rojo|Verde) (\\d+)/g);\n\t    var getAmount = function (color) {\n\t        var value = values.filter(function (it) {\n\t            return it[0] === color;\n\t        });\n\t        return parseInt((value[0] || {})[1] || 0, 0);\n\t    };\n\t\n\t    board.dropStones(Board.blue, getAmount('Azul'));\n\t    board.dropStones(Board.black, getAmount('Negro'));\n\t    board.dropStones(Board.red, getAmount('Rojo'));\n\t    board.dropStones(Board.green, getAmount('Verde'));\n\t};\n\t\n\tgbbReader._getPositionOf = function (source, element) {\n\t    source = source || {};\n\t\n\t    return [\n\t        this._try(source[1], element), this._try(source[2], element)\n\t    ].map(function (it) {\n\t        return parseInt(it, 0);\n\t    });\n\t};\n\t\n\tgbbReader._try = function (value, thingToParse) {\n\t    if (!value) {\n\t        throw new Error('Error parsing ' + (thingToParse || 'GBB file'));\n\t    }\n\t    return value;\n\t};\n\t\n\tmodule.exports = gbbReader;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar TOKEN_NAMES = __webpack_require__(6);\n\t\n\tmodule.exports = function (gbs) {\n\t    var g = new gbs.Parser(new gbs.Lexer());\n\t    var define = g;\n\t\n\t    function commaSeparatedArguments(parser) {\n\t        var parameters = [];\n\t        if (parser.token.id !== ')') {\n\t            for (; ;) {\n\t                parameters.push(parser.expression(0));\n\t                if (parser.token.id !== ',') {\n\t                    break;\n\t                }\n\t                parser.advance(',');\n\t            }\n\t        }\n\t        return parameters;\n\t    }\n\t\n\t    function parameterListCall(parser) {\n\t        parser.advance('(');\n\t        var parameters = commaSeparatedArguments(parser);\n\t        parser.advance(')');\n\t        return parameters;\n\t    }\n\t\n\t    function parameterDeclarationList() {\n\t        var parameters = [];\n\t        g.advance('(');\n\t        if (g.token.id !== ')') {\n\t            for (; ;) {\n\t                if (g.token.arity !== 'name') {\n\t                    g.error(g.token, 'Se esperaba un nombre de parámetro.');\n\t                }\n\t                parameters.push(g.token);\n\t                g.advance();\n\t                if (g.token.id !== ',') {\n\t                    break;\n\t                }\n\t                g.advance(',');\n\t            }\n\t        }\n\t        g.advance(')');\n\t        return parameters;\n\t    }\n\t\n\t    function parenthesisExpression() {\n\t        g.advance('(');\n\t        var p = g.expression(0);\n\t        g.advance(')');\n\t        return p;\n\t    }\n\t\n\t    function bodyStatement() {\n\t        return g.block() || [];\n\t    }\n\t\n\t    function bodyStatementWithOptionalMultiline() {\n\t        return (g.token.id === '{') ? bodyStatement() : [g.statement()];\n\t    }\n\t\n\t    function defineConstant(symbol, alias, value, type) {\n\t        var token = g.symbol(symbol);\n\t        token.nud = function () {\n\t            return new gbs.node.Constant(token, alias, value, type);\n\t        };\n\t    }\n\t\n\t    define.symbol('(end)');\n\t    define.symbol('(literal)').nud = function () {\n\t        return new gbs.node.NumericLiteral(this, this.value);\n\t    };\n\t\n\t    define.symbol('(name)').nud = function () {\n\t        return new gbs.node.Variable(this, this.value);\n\t    };\n\t\n\t    define.op('||', 20, gbs.node.OrOperation);\n\t    define.op('&&', 25, gbs.node.AndOperation);\n\t\n\t    define.op('+', 50, gbs.node.SumOperation);\n\t    define.op('-', 50, gbs.node.DiffOperation);\n\t    define.op('*', 60, gbs.node.MulOperation);\n\t    // TODO: chequear que efectivamente sean no asociativos\n\t    define.op(TOKEN_NAMES.DIV, 70, gbs.node.DivOperation);\n\t    define.op(TOKEN_NAMES.MOD, 70, gbs.node.ModOperation);\n\t\n\t    define.infixr('^', 80, function (left) {\n\t        return new gbs.node.ExpOperation(g.token, left, g.expression(80));\n\t    });\n\t    // TODO: chequear cómo se comporta el NOT\n\t    define.prefix(TOKEN_NAMES.NOT, function () {\n\t        return new gbs.node.NotOperation(g.token, g.expression(70));\n\t    });\n\t    define.prefix('-', function () {\n\t        return new gbs.node.SubstractionOperation(g.token, g.expression(70));\n\t    });\n\t\n\t    define.op('==', 40, gbs.node.EqOperation);\n\t    define.op('/=', 40, gbs.node.NotEqualOperation);\n\t    define.op('<', 40, gbs.node.LessOperation);\n\t    define.op('>', 40, gbs.node.GraterOperation);\n\t    define.op('<=', 40, gbs.node.LessEqualOperation);\n\t    define.op('>=', 40, gbs.node.GreaterEqualOperation);\n\t\n\t    defineConstant(TOKEN_NAMES.FALSE, 'False', false, TOKEN_NAMES.BOOLEAN);\n\t    defineConstant(TOKEN_NAMES.TRUE, 'True', true, TOKEN_NAMES.BOOLEAN);\n\t    defineConstant(TOKEN_NAMES.BLUE, 'Blue', 0, TOKEN_NAMES.COLOR);\n\t    defineConstant(TOKEN_NAMES.RED, 'Red', 1, TOKEN_NAMES.COLOR);\n\t    defineConstant(TOKEN_NAMES.BLACK, 'Black', 2, TOKEN_NAMES.COLOR);\n\t    defineConstant(TOKEN_NAMES.GREEN, 'Green', 3, TOKEN_NAMES.COLOR);\n\t    defineConstant(TOKEN_NAMES.NORTH, 'North', [0, 1], TOKEN_NAMES.DIRECTION);\n\t    defineConstant(TOKEN_NAMES.SOUTH, 'South', [0, -1], TOKEN_NAMES.DIRECTION);\n\t    defineConstant(TOKEN_NAMES.EAST, 'East', [1, 0], TOKEN_NAMES.DIRECTION);\n\t    defineConstant(TOKEN_NAMES.WEST, 'West', [-1, 0], TOKEN_NAMES.DIRECTION);\n\t\n\t    define.symbol(':');\n\t    define.symbol(')');\n\t    define.symbol('(');\n\t    define.symbol('[');\n\t    define.symbol(']');\n\t    define.symbol('}');\n\t    define.symbol(',');\n\t    define.symbol('->');\n\t    define.symbol('..');\n\t    define.symbol(TOKEN_NAMES.IN);\n\t    define.symbol(TOKEN_NAMES.ELSE);\n\t    define.symbol(TOKEN_NAMES.TO);\n\t\n\t    var separator = {separator: ';'};\n\t    define.stmt(';', function () {\n\t        return separator;\n\t    });\n\t\n\t    define.infix('(', 80, function (left) {\n\t        if (left.token.arity !== 'name') {\n\t            gbs.errors.throwParserError(left, left.token.value + ' no es una función o procedimiento');\n\t        }\n\t        var parameters = commaSeparatedArguments(g);\n\t        g.advance(')');\n\t        var node;\n\t        if (left.token.value[0].toUpperCase() === left.token.value[0]) {\n\t            node = new gbs.node.ProcedureCall(left.token, function () {\n\t                return g.scope.find(left.token.value);\n\t            }, parameters);\n\t        } else {\n\t            node = new gbs.node.FunctionCall(left.token, function () {\n\t                return g.scope.find(left.token.value);\n\t            }, parameters);\n\t        }\n\t        return node;\n\t    });\n\t\n\t    define.infixr(':=', 10, function (left) {\n\t        if (left.id !== '.' && left.id !== '[' && (!left.token || left.token.arity !== 'name')) {\n\t            g.error(left, 'Del lado izquierdo de la asignación sólo pueden usarse identificadores');\n\t        }\n\t        return new gbs.node.Assignment({}, left, g.expression(9));\n\t    });\n\t\n\t    define.stmt(TOKEN_NAMES.DROP, function () {\n\t        return new gbs.node.PutStone(g.token, parameterListCall(g));\n\t    });\n\t\n\t    define.stmt(TOKEN_NAMES.GRAB, function () {\n\t        return new gbs.node.RemoveStone(g.token, parameterListCall(g));\n\t    });\n\t\n\t    define.stmt(TOKEN_NAMES.MOVE, function () {\n\t        return new gbs.node.MoveClaw(g.token, parameterListCall(g));\n\t    });\n\t\n\t    define.stmt(TOKEN_NAMES.MOVE_TO_EDGE, function () {\n\t        return new gbs.node.MoveToEdge(g.token, parameterListCall(g));\n\t    });\n\t\n\t    define.stmt(TOKEN_NAMES.CLEAN_BOARD, function () {\n\t        return new gbs.node.CleanBoard(g.token, parameterListCall(g));\n\t    });\n\t\n\t    define.stmt(TOKEN_NAMES.BOOM, function () {\n\t        var token = g.token;\n\t        if (parenthesisExpression(g)) {\n\t            gbs.errors.throwParserError(token, 'BOOM no lleva parámetros');\n\t        }\n\t        return new gbs.node.Boom(token);\n\t    });\n\t\n\t    define.prefix(TOKEN_NAMES.HAS_STONES, function () {\n\t        return new gbs.node.HasStones(g.token, parameterListCall(g));\n\t    });\n\t\n\t    define.prefix(TOKEN_NAMES.NUM_STONES, function () {\n\t        return new gbs.node.NumStones(g.token, parameterListCall(g));\n\t    });\n\t\n\t    define.prefix(TOKEN_NAMES.MAX_COLOR, function () {\n\t        return new gbs.node.MaxColor(g.token, parameterListCall(g));\n\t    });\n\t\n\t    define.prefix(TOKEN_NAMES.MIN_COLOR, function () {\n\t        return new gbs.node.MinColor(g.token, parameterListCall(g));\n\t    });\n\t\n\t    define.prefix(TOKEN_NAMES.MAX_DIR, function () {\n\t        return new gbs.node.MaxDir(g.token, parameterListCall(g));\n\t    });\n\t\n\t    define.prefix(TOKEN_NAMES.MIN_DIR, function () {\n\t        return new gbs.node.MinDir(g.token, parameterListCall(g));\n\t    });\n\t\n\t    define.prefix(TOKEN_NAMES.MAX_BOOL, function () {\n\t        return new gbs.node.MaxBool(g.token, parameterListCall(g));\n\t    });\n\t\n\t    define.prefix(TOKEN_NAMES.MIN_BOOL, function () {\n\t        return new gbs.node.MinBool(g.token, parameterListCall(g));\n\t    });\n\t\n\t    define.prefix(TOKEN_NAMES.CAN_MOVE, function () {\n\t        var id = g.token;\n\t        var parameters = parameterListCall(g);\n\t        return new gbs.node.CanMove(id, parameters);\n\t    });\n\t\n\t    define.stmt(TOKEN_NAMES.IF, function () {\n\t        var token = g.token;\n\t        g.advance('(');\n\t        var condition = g.expression(0);\n\t        g.advance(')');\n\t        var trueBranch = bodyStatement(g);\n\t        var falseBranch = null;\n\t        if (g.token.id === TOKEN_NAMES.ELSE) {\n\t            g.scope.reserve(g.token);\n\t            g.advance(TOKEN_NAMES.ELSE);\n\t            falseBranch = bodyStatement(g);\n\t        }\n\t        return new gbs.node.If(token, condition, trueBranch, falseBranch);\n\t    });\n\t\n\t    define.stmt(TOKEN_NAMES.SWITCH, function () {\n\t        var token = g.token;\n\t        var condition = parenthesisExpression(g);\n\t        if (g.token.id === TOKEN_NAMES.TO) {\n\t            g.advance(TOKEN_NAMES.TO);\n\t        }\n\t        g.advance('{');\n\t        var cases = [];\n\t        for (; ;) {\n\t            var exp = g.expression(0);\n\t            g.advance('->');\n\t            var body = bodyStatementWithOptionalMultiline(g);\n\t            cases.push({\n\t                case: exp,\n\t                body: body\n\t            });\n\t            if (g.token.id === '}' || !g.tokens.hasNext()) {\n\t                break;\n\t            }\n\t        }\n\t        g.advance('}');\n\t        return new gbs.node.Switch(token, condition, cases);\n\t    });\n\t\n\t    define.stmt(TOKEN_NAMES.WHILE, function () {\n\t        return new gbs.node.While(g.token, parenthesisExpression(g), bodyStatement(g));\n\t    });\n\t\n\t    define.stmt(TOKEN_NAMES.REPEAT, function () {\n\t        return new gbs.node.Repeat(g.token, parenthesisExpression(g), bodyStatement(g));\n\t    });\n\t\n\t    define.stmt(TOKEN_NAMES.FOR_EACH, function () {\n\t        // foreach dir in [minDir() .. maxDir()]\n\t        var iterator = g.expression();\n\t        if (iterator.token.arity !== 'name') {\n\t            g.error(iterator.token, 'El foreach espera un identificador sobre el cual iterar');\n\t        }\n\t        g.advance(TOKEN_NAMES.IN);\n\t        g.advance('[');\n\t        var items = commaSeparatedArguments(g);\n\t        g.advance(']');\n\t        return new gbs.node.ForEach(g.token, iterator, items, g.block());\n\t    });\n\t\n\t    define.stmt('{', function () {\n\t        var a = g.statements();\n\t        g.advance('}');\n\t        return a;\n\t    });\n\t\n\t    define.stmt('(', function () {\n\t        var a = g.statements();\n\t        g.advance(')');\n\t        return a;\n\t    });\n\t\n\t    define.prefix('(', function () {\n\t        var expression = g.expression(0);\n\t        g.advance(')');\n\t        return expression;\n\t    });\n\t\n\t    define.root(TOKEN_NAMES.PROGRAM, function () {\n\t        return new gbs.node.Program(g.token, g.block());\n\t    });\n\t\n\t    define.root(TOKEN_NAMES.FUNCTION, function () {\n\t        g.newScope();\n\t        var token = g.token;\n\t        if (g.token.arity === 'name') {\n\t            if (g.token.value[0] !== g.token.value[0].toLowerCase()) {\n\t                g.error(token, 'El nombre de la función ' + token.value + ' debe emepzar con minúscula');\n\t            }\n\t            g.scope.define(token);\n\t            g.advance();\n\t        } else {\n\t            g.error(token, 'Se esperaba un nombre de función');\n\t        }\n\t        var parameters = parameterDeclarationList(g);\n\t        var body = bodyStatement(g);\n\t\n\t        var ret = body.pop();\n\t        if (!ret || ret.alias !== 'return' || !ret.expression) {\n\t            g.error(token, 'La función ' + token.value + ' debe terminar con un ' + TOKEN_NAMES.RETURN);\n\t        }\n\t        g.scope.pop();\n\t        var declaration = new gbs.node.FunctionDeclaration(token, parameters, body, ret);\n\t        token.declaration = declaration;\n\t        return declaration;\n\t    });\n\t\n\t    define.stmt(TOKEN_NAMES.RETURN, function () {\n\t        return new gbs.node.ReturnStatement(g.token, parenthesisExpression(g));\n\t    });\n\t\n\t    define.root(TOKEN_NAMES.PROCEDURE, function () {\n\t        g.newScope();\n\t        var token = g.token;\n\t        if (g.token.arity === 'name') {\n\t            if (g.token.value[0] !== g.token.value[0].toUpperCase()) {\n\t                g.error(token, 'El nombre del procedimiento ' + token.value + ' debe emepzar con mayúscula');\n\t            }\n\t            g.scope.define(token);\n\t            g.advance();\n\t        } else {\n\t            g.error(token, 'Se esperaba un nombre de procedimiento');\n\t        }\n\t        var parameters = parameterDeclarationList(g);\n\t        var body = bodyStatement();\n\t        g.scope.pop();\n\t        var declaration = new gbs.node.ProcedureDeclaration(token, parameters, body);\n\t        token.declaration = declaration;\n\t        return declaration;\n\t    });\n\t\n\t    define.parse = function (input) {\n\t        var main;\n\t        var declarations = [];\n\t        var roots = g.parseProgram(input);\n\t        for (var i = 0; i < roots.length; i++) {\n\t            if (roots[i].alias === 'program') {\n\t                main = roots[i];\n\t            } else {\n\t                declarations.push(roots[i]);\n\t            }\n\t        }\n\t        return new gbs.node.Root(main, declarations);\n\t    };\n\t\n\t    return g;\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar errors = __webpack_require__(1);\n\tvar Scope = __webpack_require__(7);\n\t\n\tfunction throwUndefinedSymbolError() {\n\t    errors.throwParserError(this, 'No definido');\n\t}\n\t\n\tfunction throwMissingOperatorError() {\n\t    errors.throwParserError(this, 'No se encontró el operador');\n\t}\n\t\n\tvar OriginalSymbol = function () {\n\t    this.nud = throwUndefinedSymbolError;\n\t    this.led = throwMissingOperatorError;\n\t};\n\t\n\tvar Parser = function (lexer) {\n\t    this.scope = null;\n\t    this.token = null;\n\t    this.tokens = lexer;\n\t    this.symbolTable = {};\n\t};\n\t\n\tParser.prototype.symbol = function (id, bindingPower) {\n\t    var s = this.symbolTable[id];\n\t    bindingPower = bindingPower || 0;\n\t    if (s) {\n\t        if (bindingPower > s.lbp) {\n\t            s.lbp = bindingPower;\n\t        }\n\t    } else {\n\t        s = new OriginalSymbol();\n\t        s.id = s.value = id;\n\t        s.lbp = bindingPower;\n\t        this.symbolTable[id] = s;\n\t    }\n\t    return s;\n\t};\n\t\n\tParser.prototype.expression = function (rightBindingPower) {\n\t    rightBindingPower = rightBindingPower || 0;\n\t    var left;\n\t    var t = this.token;\n\t    this.advance();\n\t    left = t.nud();\n\t    while (rightBindingPower < this.token.lbp) {\n\t        t = this.token;\n\t        this.advance();\n\t        left = t.led(left);\n\t    }\n\t    return left;\n\t};\n\t\n\tParser.prototype.error = function (token, message) {\n\t    errors.throwParserError(token, message);\n\t};\n\t\n\tParser.prototype.newScope = function () {\n\t    var s = this.scope;\n\t    this.scope = new Scope(this);\n\t    this.scope.parent = s;\n\t    return this.scope;\n\t};\n\t\n\tParser.prototype.advance = function (id) {\n\t    var a;\n\t    var o;\n\t    var t;\n\t    var v;\n\t    var tokens = this.tokens;\n\t    if (id && this.token.id !== id) {\n\t        if (this.lastToken && this.lastToken.range && this.token.range) {\n\t            this.token.range.start = this.lastToken.range.start;\n\t        }\n\t        errors.throwParserError(this.token, 'Se esperaba \"' + id + '\" pero se encontró \"' + this.token.value + '\"');\n\t    }\n\t    if (!tokens.hasNext()) {\n\t        var lastRange = this.token.range;\n\t        this.token = this.symbolTable['(end)'];\n\t        this.token.range = lastRange;\n\t        return this.token;\n\t    }\n\t    t = tokens.next();\n\t    v = t.value;\n\t    a = t.type;\n\t    if (a === 'name') {\n\t        o = this.scope.find(v);\n\t        if (o.arity === 'routine') {\n\t            // force late binding\n\t            o = this.symbolTable['(name)'];\n\t        }\n\t    } else if (a === 'operator') {\n\t        o = this.symbolTable[v];\n\t        if (!o) {\n\t            errors.throwParserError(t, 'Unknown operator.');\n\t        }\n\t    } else if (a === 'number') {\n\t        o = this.symbolTable['(literal)'];\n\t        a = 'literal';\n\t        v = parseInt(v, 10);\n\t    } else {\n\t        errors.throwParserError(t, 'Unexpected token.');\n\t    }\n\t\n\t    var token = Object.create(o);\n\t    token.range = t.range;\n\t    token.value = v;\n\t    token.arity = a;\n\t    this.lastToken = this.token;\n\t    this.token = token;\n\t    return token;\n\t};\n\t\n\tParser.prototype.op = function (id, bp, OpDefinition) {\n\t    var parser = this;\n\t    var s = this.symbol(id, bp);\n\t    s.led = function (left) {\n\t        return new OpDefinition(this, left, parser.expression(bp));\n\t    };\n\t    return s;\n\t};\n\t\n\tParser.prototype.statement = function () {\n\t    var n = this.token;\n\t    var v;\n\t    if (n.std) {\n\t        this.advance();\n\t        this.scope.reserve(n);\n\t        return n.std();\n\t    }\n\t    v = this.expression(0);\n\t    if (v.alias !== ':=' && v.id !== '(' && v.arity !== 'routine') {\n\t        errors.throwParserError(v, 'Bad expression statement.');\n\t    }\n\t    return v;\n\t};\n\t\n\tParser.prototype.statements = function () {\n\t    var statementsList = [];\n\t    var symbol;\n\t    for (; ;) {\n\t        if (this.token.id === '}' || this.token.id === '(end)') {\n\t            break;\n\t        }\n\t        var range = this._currentRange();\n\t        symbol = this.statement();\n\t        if (symbol && !symbol.separator) {\n\t            this._applyRangeToSymbol(range, symbol);\n\t            statementsList.push(symbol);\n\t        }\n\t    }\n\t    if (statementsList.length === 0) {\n\t        return null;\n\t    }\n\t    return statementsList;\n\t};\n\t\n\tParser.prototype._applyRangeToSymbol = function (range, symbol) {\n\t    symbol.range = range;\n\t    if (this.token.range && this.token.range.end) {\n\t        range.end = this.token.range.end;\n\t    }\n\t};\n\t\n\tParser.prototype.rootDeclaration = function () {\n\t    var n = this.token;\n\t    if (!n.root) {\n\t        errors.throwParserError(n, 'Se esperaba una definición de programa, función o procedimiento.');\n\t    }\n\t    this.advance();\n\t    this.scope.reserve(n);\n\t    return n.root();\n\t};\n\t\n\tParser.prototype.stmt = function (symbol, f) {\n\t    var x = this.symbol(symbol);\n\t    x.std = f;\n\t    return x;\n\t};\n\t\n\tParser.prototype.infix = function (id, bp, led) {\n\t    var s = this.symbol(id, bp);\n\t    var self = this;\n\t    s.led = led || function (left) {\n\t        this.left = left;\n\t        this.right = self.expression(bp);\n\t        this.arity = 'binary';\n\t        return this;\n\t    };\n\t    return s;\n\t};\n\t\n\tParser.prototype.infixr = function (id, bp, led) {\n\t    var s = this.symbol(id, bp);\n\t    var self = this;\n\t    s.led = led || function (left) {\n\t        this.left = left;\n\t        this.right = self.expression(bp - 1);\n\t        this.arity = 'binary';\n\t        return this;\n\t    };\n\t    return s;\n\t};\n\t\n\tParser.prototype.prefix = function (id, nud) {\n\t    var s = this.symbol(id);\n\t    var self = this;\n\t    s.nud = nud || function () {\n\t        self.scope.reserve(this);\n\t        this.left = self.expression(70);\n\t        this.arity = 'unary';\n\t        return this;\n\t    };\n\t    return s;\n\t};\n\t\n\tParser.prototype.root = function (symbol, f) {\n\t    var x = this.symbol(symbol);\n\t    x.root = f;\n\t    return x;\n\t};\n\t\n\tParser.prototype.block = function () {\n\t    var t = this.token;\n\t    this.advance('{');\n\t    return t.std();\n\t};\n\t\n\tParser.prototype._currentRange = function () {\n\t    return {start: this.token.range.start, end: this.token.range.end};\n\t};\n\t\n\tParser.prototype.roots = function () {\n\t    var roots = [];\n\t    var symbol;\n\t    for (; ;) {\n\t        if (this.token.id === '(end)') {\n\t            break;\n\t        }\n\t        var range = this._currentRange();\n\t        symbol = this.rootDeclaration();\n\t        if (symbol) {\n\t            this._applyRangeToSymbol(range, symbol);\n\t            roots.push(symbol);\n\t        }\n\t    }\n\t    if (roots.length === 0) {\n\t        return null;\n\t    }\n\t    return roots;\n\t};\n\t\n\tParser.prototype._parseContextAwareNode = function (input, nodeParser) {\n\t    this.tokens.input(input);\n\t    this.newScope();\n\t    this.advance();\n\t    var s = nodeParser();\n\t    this.advance('(end)');\n\t    this.scope.pop();\n\t    return s;\n\t};\n\t\n\tParser.prototype.parseExpression = function (input) {\n\t    var self = this;\n\t    return this._parseContextAwareNode(input, function () {\n\t        return self.expression(0);\n\t    });\n\t};\n\t\n\tParser.prototype.parseProgram = function (input) {\n\t    var self = this;\n\t    return this._parseContextAwareNode(input, function () {\n\t        return self.roots();\n\t    });\n\t};\n\t\n\tParser.prototype.parseStatements = function (input) {\n\t    var self = this;\n\t    return this._parseContextAwareNode(input, function () {\n\t        return self.statements();\n\t    });\n\t};\n\t\n\tmodule.exports = Parser;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tvar TOKEN_NAMES = {\n\t    PROGRAM: 'program',\n\t    PROCEDURE: 'procedure',\n\t    FUNCTION: 'function',\n\t    RETURN: 'return',\n\t    DROP: 'Poner',\n\t    MOVE: 'Mover',\n\t    GRAB: 'Sacar',\n\t    BOOM: 'BOOM',\n\t    MOVE_TO_EDGE: 'IrAlBorde',\n\t    CLEAN_BOARD: 'VaciarTablero',\n\t    REPEAT: 'repeat',\n\t    WHILE: 'while',\n\t    FOR_EACH: 'foreach',\n\t    IN: 'in',\n\t    IF: 'if',\n\t    THEN: 'then',\n\t    ELSE: 'else',\n\t    SWITCH: 'switch',\n\t    TO: 'to',\n\t    OPPOSITE: 'opuesto',\n\t    NEXT: 'siguiente',\n\t    PREVIOUS: 'previo',\n\t    DIV: 'div',\n\t    MOD: 'mod',\n\t    NOT: 'not',\n\t    HAS_STONES: 'hayBolitas',\n\t    CAN_MOVE: 'puedeMover',\n\t    NUM_STONES: 'nroBolitas',\n\t    MIN_DIR: 'minDir',\n\t    MAX_DIR: 'maxDir',\n\t    MIN_COLOR: 'minColor',\n\t    MAX_COLOR: 'maxColor',\n\t    MIN_BOOL: 'minBool',\n\t    MAX_BOOL: 'maxBool',\n\t    RED: 'Rojo',\n\t    BLUE: 'Azul',\n\t    BLACK: 'Negro',\n\t    GREEN: 'Verde',\n\t    TRUE: 'True',\n\t    FALSE: 'False',\n\t    NORTH: 'Norte',\n\t    SOUTH: 'Sur',\n\t    EAST: 'Este',\n\t    WEST: 'Oeste',\n\t    BOOLEAN: 'Booleano',\n\t    COLOR: 'Color',\n\t    DIRECTION: 'Dirección',\n\t    NUMBER: 'Número'\n\t};\n\t\n\tmodule.exports = TOKEN_NAMES;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar errors = __webpack_require__(1);\n\t\n\tfunction itself() {\n\t    return this;\n\t}\n\t\n\tvar Scope = function (parser) {\n\t    this.parser = parser;\n\t    this.def = {};\n\t};\n\t\n\tScope.prototype.define = function (identifier) {\n\t    var t = this.def[identifier.value];\n\t    if (typeof t === 'object') {\n\t        errors.throwParserError(identifier, t.reserved ? 'Already reserved.' : 'Already defined.');\n\t    }\n\t    this.def[identifier.value] = identifier;\n\t    identifier.reserved = false;\n\t    identifier.nud = itself;\n\t    identifier.led = null;\n\t    identifier.std = null;\n\t    identifier.lbp = 0;\n\t    identifier.scope = this.parser.scope;\n\t    return identifier;\n\t};\n\t\n\tScope.prototype.find = function (name) {\n\t    var e = this;\n\t    var targetToken;\n\t    for (; ;) {\n\t        targetToken = e.def[name];\n\t        if (targetToken && typeof targetToken !== 'function') {\n\t            return e.def[name];\n\t        }\n\t        e = e.parent;\n\t        if (!e) {\n\t            targetToken = this.parser.symbolTable[name];\n\t            return targetToken && typeof targetToken !== 'function' ? targetToken : this.parser.symbolTable['(name)'];\n\t        }\n\t    }\n\t};\n\t\n\tScope.prototype.pop = function () {\n\t    this.scope = this.parent;\n\t};\n\t\n\tScope.prototype.reserve = function (name) {\n\t    if (name.arity !== 'name' || name.reserved) {\n\t        return;\n\t    }\n\t    var t = this.def[name.value];\n\t    if (t) {\n\t        if (t.reserved) {\n\t            return;\n\t        }\n\t        if (t.arity === 'name') {\n\t            name.error('Already defined.');\n\t        }\n\t    }\n\t    this.def[name.value] = name;\n\t    name.reserved = true;\n\t};\n\t\n\tmodule.exports = Scope;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tfunction Lexer(prefix, suffix) {\n\t    // Current reading position\n\t    this.from = 0;\n\t    this.startColumn = 0;\n\t    this.endColumn = 0;\n\t    this.row = 0;\n\t    this.prefix = prefix || '/=-<>:|&.';\n\t    this.suffix = suffix || '=|&>.';\n\t\n\t    this.punctuators = '/+-*^.:|&;,()<>{}[]=';\n\t\n\t    // Look ahead position\n\t    this.i = 0;\n\t\n\t    this.buf = null;\n\t    this.buflen = 0;\n\t}\n\t\n\tLexer.prototype.hasNext = function () {\n\t    this._skipNonTokens();\n\t    return this.from < this.buflen;\n\t};\n\t\n\tLexer.prototype.input = function (buf) {\n\t    this.from = 0;\n\t    this.i = 0;\n\t    this.startColumn = 0;\n\t    this.endColumn = 0;\n\t    this.row = 0;\n\t    this.buf = buf;\n\t    this.buflen = buf.length;\n\t    this.current = null;\n\t    this.nextChar = null;\n\t};\n\t\n\tvar TokenTypes = {\n\t    IDENTIFIER: 'name',\n\t    OPERATOR: 'operator',\n\t    EOF: 'eof',\n\t    COMMENT: 'comment',\n\t    NUMBER: 'number',\n\t    NEWLINE: 'newline'\n\t};\n\t\n\t/**\n\t * This method is highly procedural for performance reasons.\n\t * There is no need for the lexer to be too flexible, since the\n\t * semantics will be associated to identifiers on the parser.\n\t *\n\t * @returns Token. The next token on the buffer, or null if the buffer is empty.\n\t */\n\tLexer.prototype.next = function () {\n\t    do {\n\t        this._skipNonTokens();\n\t        this._refreshCurrentAndNextChars();\n\t\n\t        if (this.from >= this.buflen) {\n\t            return null;\n\t        }\n\t    } while (this._processComment());\n\t\n\t    // Always add cases in descending order of occurrence probability\n\t    if (this._processIdentifier()) {\n\t        return this._consume(TokenTypes.IDENTIFIER);\n\t    } else if (this._processOperator()) {\n\t        return this._consume(TokenTypes.OPERATOR);\n\t    } else if (this._processNumber()) {\n\t        return this._consume(TokenTypes.NUMBER);\n\t    }\n\t    return this._processError();\n\t};\n\t\n\t// PRIVATE\n\t\n\tfunction error(token, description) {\n\t    return {error: description, on: token};\n\t}\n\t\n\tLexer.prototype._make = function (type, value) {\n\t    return {\n\t        type: type,\n\t        value: value,\n\t        range: {\n\t            start: {row: this.row, column: this.startColumn},\n\t            end: {row: this.row, column: this.endColumn}\n\t        }\n\t    };\n\t};\n\t\n\tLexer.prototype._consume = function (type) {\n\t    var text = this.buf.substring(this.from, this.i);\n\t    var newToken = this._make(type, text);\n\t    this.from = this.i;\n\t    this.startColumn = this.endColumn;\n\t    return newToken;\n\t};\n\t\n\tLexer.prototype._refreshCurrentAndNextChars = function () {\n\t    this.current = this.buf.charAt(this.from);\n\t    this.nextChar = this.buf.charAt(this.from + 1);\n\t};\n\t\n\tLexer.prototype._processOperator = function () {\n\t    if (this.punctuators.indexOf(this.current) >= 0) {\n\t        this._increaseFrom();\n\t        this._processMultiCharOperator();\n\t        return true;\n\t    }\n\t    return false;\n\t};\n\t\n\tLexer.prototype._processMultiCharOperator = function () {\n\t    if (this.prefix.indexOf(this.current) >= 0 && this.suffix.indexOf(this.nextChar) >= 0) {\n\t        this._incrementStep();\n\t    }\n\t};\n\t\n\tLexer.prototype._processNumber = function () {\n\t    if (_isDigit(this.current)) {\n\t        this._increaseFrom();\n\t        while (this.i < this.buflen && _isDigit(this.buf.charAt(this.i))) {\n\t            this._incrementStep();\n\t        }\n\t        return true;\n\t    }\n\t    return false;\n\t};\n\t\n\tLexer.prototype._processError = function () {\n\t    this._increaseFrom();\n\t    return error('Unmatched token', this._consume('UNMATCHED'));\n\t};\n\t\n\tLexer.prototype._resetColumnCount = function () {\n\t    this.startColumn = this.endColumn;\n\t};\n\t\n\tLexer.prototype._increaseFrom = function () {\n\t    this.i = this.from + 1;\n\t    this.startColumn = this.startColumn + 1;\n\t    this.endColumn = this.startColumn;\n\t};\n\t\n\tLexer.prototype._incrementStep = function () {\n\t    this.i++;\n\t    this.endColumn++;\n\t};\n\t\n\tLexer.prototype._processIdentifier = function () {\n\t    if (_isAlpha(this.current)) {\n\t        this._increaseFrom();\n\t        while (this.i < this.buflen && _isAlphanum(this.buf.charAt(this.i))) {\n\t            this._incrementStep();\n\t        }\n\t        return true;\n\t    }\n\t    return false;\n\t};\n\t\n\tLexer.prototype._skipNonTokens = function () {\n\t    while (this.from < this.buflen) {\n\t        var c = this.buf.charAt(this.from);\n\t        if (c === ' ' || c === '\\t' || c === '\\r' || c === '\\n') {\n\t            if (_isNewline(c)) {\n\t                this.row += 1;\n\t                this.endColumn = 0;\n\t                this.startColumn = 0;\n\t            } else {\n\t                this.startColumn++;\n\t                this.endColumn = this.startColumn;\n\t            }\n\t            this.from++;\n\t            this.i = this.from;\n\t        } else {\n\t            break;\n\t        }\n\t    }\n\t};\n\t\n\tLexer.prototype._processComment = function () {\n\t    var chars = this.current + this.nextChar;\n\t    return this._processSingleLineComment(chars) || this._processMultiLineComment(chars);\n\t};\n\t\n\tLexer.prototype._processSingleLineComment = function (chars) {\n\t    if (chars === '//') {\n\t        while (this.i < this.buflen && !_isNewline(this.buf.charAt(this.i))) {\n\t            this._incrementStep();\n\t        }\n\t        this.from = this.i;\n\t        this.row++;\n\t        this.startColumn = 0;\n\t        this.endColumn = 0;\n\t        return true;\n\t    }\n\t};\n\t\n\tLexer.prototype._processMultiLineComment = function (chars) {\n\t    if (chars === '/*') {\n\t        this._incrementStep();\n\t        this._incrementStep();\n\t        while (this.i < this.buflen && this.buf.charAt(this.i) !== '*' && this.buf.charAt(this.i + 1) !== '/') {\n\t            this._incrementStep();\n\t            if (_isNewline(this.buf.charAt(this.i))) {\n\t                this.endColumn = 0;\n\t            }\n\t        }\n\t        this._incrementStep();\n\t        this._incrementStep();\n\t        this.from = this.i;\n\t        this.endColumn = this.startColumn;\n\t        return true;\n\t    }\n\t    return false;\n\t};\n\t\n\tfunction _isNewline(c) {\n\t    return c === '\\r' || c === '\\n';\n\t}\n\t\n\tfunction _isDigit(c) {\n\t    return c >= '0' && c <= '9';\n\t}\n\t\n\tfunction _isAlpha(c) {\n\t    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '_' || c === '\\'';\n\t}\n\t\n\tfunction _isAlphanum(c) {\n\t    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c === '_' || c === '$';\n\t}\n\t\n\tmodule.exports = Lexer;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Board = __webpack_require__(2);\n\t\n\tvar Context = function () {\n\t    var variablesStack = [];\n\t    var boardsStack = [];\n\t    var currentBoard = new Board(9, 9);\n\t    var currentVariables = {};\n\t\n\t    this.init = function () {\n\t        currentBoard.init();\n\t    };\n\t\n\t    this.nativeRepresentations = function () {\n\t        return Board;\n\t    };\n\t\n\t    this.board = function () {\n\t        return currentBoard;\n\t    };\n\t\n\t    this.put = function (key, value) {\n\t        currentVariables[key] = value;\n\t    };\n\t\n\t    this.get = function (id) {\n\t        return currentVariables[id];\n\t    };\n\t\n\t    this.all = function () {\n\t        return currentVariables;\n\t    };\n\t\n\t    this.startContext = function () {\n\t        variablesStack.push(currentVariables);\n\t        currentVariables = {};\n\t    };\n\t\n\t    this.stopContext = function () {\n\t        currentVariables = variablesStack.pop();\n\t    };\n\t\n\t    this.pushBoard = function () {\n\t        boardsStack.push(currentBoard);\n\t        currentBoard = currentBoard.clone();\n\t    };\n\t\n\t    this.popBoard = function () {\n\t        currentBoard = boardsStack.pop();\n\t    };\n\t\n\t    this.init();\n\t};\n\t\n\tmodule.exports = Context;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (node, constants) {\n\t    node.Assignment = function (token, left, right) {\n\t        this.token = token;\n\t        this.arity = constants.STM;\n\t        this.alias = ':=';\n\t        this.left = left;\n\t        this.right = right;\n\t    };\n\t\n\t    node.Assignment.prototype.interpret = function (context) {\n\t        context.put(this.left.token.value, this.right.eval(context));\n\t    };\n\t};\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (node, constants) {\n\t    var BinaryOperation = function (token, left, right, alias) {\n\t        this.alias = alias;\n\t        this.token = token;\n\t        this.left = left;\n\t        this.right = right;\n\t        this.arity = constants.BINARY;\n\t    };\n\t\n\t    function defineBinaryOperation(className) {\n\t        node[className] = function (token, left, right) {\n\t            BinaryOperation.call(this, token, left, right, className);\n\t        };\n\t        node[className].prototype = new BinaryOperation();\n\t    }\n\t\n\t    defineBinaryOperation('SumOperation');\n\t    node.SumOperation.prototype.eval = function (context) {\n\t        return this.left.eval(context) + this.right.eval(context);\n\t    };\n\t\n\t    defineBinaryOperation('DiffOperation');\n\t    node.DiffOperation.prototype.eval = function (context) {\n\t        return this.left.eval(context) - this.right.eval(context);\n\t    };\n\t\n\t    defineBinaryOperation('MulOperation');\n\t    node.MulOperation.prototype.eval = function (context) {\n\t        return this.left.eval(context) * this.right.eval(context);\n\t    };\n\t\n\t    defineBinaryOperation('DivOperation');\n\t    node.DivOperation.prototype.eval = function (context) {\n\t        return Math.floor(this.left.eval(context) / this.right.eval(context));\n\t    };\n\t\n\t    defineBinaryOperation('ModOperation');\n\t    node.ModOperation.prototype.eval = function (context) {\n\t        return this.left.eval(context) % this.right.eval(context);\n\t    };\n\t\n\t    defineBinaryOperation('ExpOperation');\n\t    node.ExpOperation.prototype.eval = function (context) {\n\t        return Math.pow(this.left.eval(context), this.right.eval(context));\n\t    };\n\t\n\t    defineBinaryOperation('AndOperation');\n\t    node.AndOperation.prototype.eval = function (context) {\n\t        return this.left.eval(context) && this.right.eval(context);\n\t    };\n\t\n\t    defineBinaryOperation('OrOperation');\n\t    node.OrOperation.prototype.eval = function (context) {\n\t        return this.left.eval(context) || this.right.eval(context);\n\t    };\n\t\n\t    defineBinaryOperation('NotEqualOperation');\n\t    node.NotEqualOperation.prototype.eval = function (context) {\n\t        return this.left.eval(context) !== this.right.eval(context);\n\t    };\n\t\n\t    defineBinaryOperation('EqOperation');\n\t    node.EqOperation.prototype.eval = function (context) {\n\t        return this.left.eval(context) === this.right.eval(context);\n\t    };\n\t\n\t    defineBinaryOperation('LessOperation');\n\t    node.LessOperation.prototype.eval = function (context) {\n\t        return this.left.eval(context) < this.right.eval(context);\n\t    };\n\t\n\t    defineBinaryOperation('GraterOperation');\n\t    node.GraterOperation.prototype.eval = function (context) {\n\t        return this.left.eval(context) > this.right.eval(context);\n\t    };\n\t\n\t    defineBinaryOperation('LessEqualOperation');\n\t    node.LessEqualOperation.prototype.eval = function (context) {\n\t        return this.left.eval(context) <= this.right.eval(context);\n\t    };\n\t\n\t    defineBinaryOperation('GreaterEqualOperation');\n\t    node.GreaterEqualOperation.prototype.eval = function (context) {\n\t        return this.left.eval(context) >= this.right.eval(context);\n\t    };\n\t}\n\t;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (node) {\n\t    node.If = function (token, condition, trueBranch, falseBranch) {\n\t        this.token = token;\n\t        this.alias = 'if';\n\t        this.condition = condition;\n\t        this.trueBranch = trueBranch;\n\t        this.falseBranch = falseBranch;\n\t    };\n\t\n\t    node.If.prototype.interpret = function (context) {\n\t        return node.interpretBlock(this.condition.eval(context) ? this.trueBranch : this.falseBranch, context);\n\t    };\n\t\n\t    node.Switch = function (token, expression, cases) {\n\t        this.token = token;\n\t        this.alias = 'switch';\n\t        this.expression = expression;\n\t        this.cases = cases;\n\t    };\n\t\n\t    node.Switch.prototype.interpret = function (context) {\n\t        var value = this.expression.eval(context);\n\t        for (var i = 0; i < this.cases.length; i++) {\n\t            if (this.cases[i].case.eval(context) === value) {\n\t                node.interpretBlock(this.cases[i].body, context);\n\t                break;\n\t            }\n\t        }\n\t        return context;\n\t    };\n\t}\n\t;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (node) {\n\t    node.Constant = function (token, alias, value, type) {\n\t        this.token = token;\n\t        this.value = value;\n\t        this.alias = alias;\n\t        this.type = type;\n\t    };\n\t\n\t    node.Constant.prototype.eval = function () {\n\t        return this.value;\n\t    };\n\t}\n\t;\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (node, constants) {\n\t    node.NumericLiteral = function (token, value) {\n\t        this.token = token;\n\t        this.value = value;\n\t        this.alias = constants.NUMERIC_LITERAL;\n\t    };\n\t    node.NumericLiteral.prototype.type = 'number';\n\t\n\t    node.NumericLiteral.prototype.eval = function () {\n\t        return this.value;\n\t    };\n\t};\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar node = {};\n\tnode.errors = __webpack_require__(1);\n\t\n\tvar constants = {\n\t    STM: 'statement',\n\t    BINARY: 'binary',\n\t    EXPRESSION: 'binary',\n\t    NUMERIC_LITERAL: 'NumericLiteral'\n\t};\n\t\n\tnode.interpretBlock = function (block, context) {\n\t    block = block || [];\n\t    for (var i = 0; i < block.length; i++) {\n\t        block[i].interpret(context);\n\t    }\n\t    return context;\n\t};\n\t\n\t__webpack_require__(14)(node, constants);\n\t__webpack_require__(13)(node, constants);\n\t__webpack_require__(23)(node, constants);\n\t__webpack_require__(10)(node, constants);\n\t__webpack_require__(12)(node, constants);\n\t__webpack_require__(11)(node, constants);\n\t__webpack_require__(22)(node, constants);\n\t__webpack_require__(16)(node, constants);\n\t__webpack_require__(17)(node, constants);\n\t__webpack_require__(20)(node, constants);\n\t__webpack_require__(21)(node, constants);\n\t__webpack_require__(19)(node, constants);\n\t__webpack_require__(18)(node, constants);\n\t\n\tmodule.exports = node;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (node, constants) {\n\t    node.HasStones = function (token, parameters) {\n\t        this.token = token;\n\t        this.arity = constants.EXPRESSION;\n\t        this.alias = 'hasStones';\n\t        this.parameters = parameters;\n\t    };\n\t\n\t    node.HasStones.prototype.eval = function (context) {\n\t        return context.board().amountStones(this.parameters[0].eval(context)) > 0;\n\t    };\n\t\n\t    node.CanMove = function (token, parameters) {\n\t        this.token = token;\n\t        this.arity = constants.EXPRESSION;\n\t        this.alias = 'canMove';\n\t        this.parameters = parameters;\n\t    };\n\t\n\t    node.CanMove.prototype.eval = function (context) {\n\t        return context.board().canMove(this.parameters[0].eval(context));\n\t    };\n\t\n\t    node.NumStones = function (token, parameters) {\n\t        this.token = token;\n\t        this.arity = constants.EXPRESSION;\n\t        this.alias = 'numStones';\n\t        this.parameters = parameters;\n\t    };\n\t\n\t    node.NumStones.prototype.eval = function (context) {\n\t        return context.board().amountStones(this.parameters[0].eval(context));\n\t    };\n\t\n\t    node.MinDir = function (token, parameters) {\n\t        this.token = token;\n\t        this.arity = constants.EXPRESSION;\n\t        this.alias = 'minDir';\n\t        this.parameters = parameters;\n\t    };\n\t\n\t    node.MinDir.prototype.eval = function (context) {\n\t        return context.nativeRepresentations().minDir;\n\t    };\n\t\n\t    node.MaxDir = function (token, parameters) {\n\t        this.token = token;\n\t        this.arity = constants.EXPRESSION;\n\t        this.alias = 'maxDir';\n\t        this.parameters = parameters;\n\t    };\n\t\n\t    node.MaxDir.prototype.eval = function (context) {\n\t        return context.nativeRepresentations().maxDir;\n\t    };\n\t\n\t    node.MaxColor = function (token, parameters) {\n\t        this.token = token;\n\t        this.arity = constants.EXPRESSION;\n\t        this.alias = 'maxColor';\n\t        this.parameters = parameters;\n\t    };\n\t\n\t    node.MaxColor.prototype.eval = function (context) {\n\t        return context.nativeRepresentations().maxColor;\n\t    };\n\t\n\t    node.MinColor = function (token, parameters) {\n\t        this.token = token;\n\t        this.arity = constants.EXPRESSION;\n\t        this.alias = 'minColor';\n\t        this.parameters = parameters;\n\t    };\n\t\n\t    node.MinColor.prototype.eval = function (context) {\n\t        return context.nativeRepresentations().minColor;\n\t    };\n\t\n\t    node.MinBool = function (token, parameters) {\n\t        this.token = token;\n\t        this.arity = constants.EXPRESSION;\n\t        this.alias = 'minBool';\n\t        this.parameters = parameters;\n\t    };\n\t\n\t    node.MinBool.prototype.eval = function () {\n\t        return false;\n\t    };\n\t\n\t    node.MaxBool = function (token, parameters) {\n\t        this.token = token;\n\t        this.arity = constants.EXPRESSION;\n\t        this.alias = 'maxBool';\n\t        this.parameters = parameters;\n\t    };\n\t\n\t    node.MaxBool.prototype.eval = function () {\n\t        return true;\n\t    };\n\t};\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (node, constants) {\n\t    node.MoveClaw = function (token, parameters) {\n\t        this.token = token;\n\t        this.arity = constants.STM;\n\t        this.alias = 'MoveClaw';\n\t        this.parameters = parameters;\n\t    };\n\t\n\t    node.MoveClaw.prototype.interpret = function (context) {\n\t        try {\n\t            context.board().move(this.parameters[0].eval(context));\n\t        } catch (err) {\n\t            err.on = this.token;\n\t            throw err;\n\t        }\n\t        return context;\n\t    };\n\t\n\t    node.RemoveStone = function (token, parameters) {\n\t        this.token = token;\n\t        this.arity = constants.STM;\n\t        this.alias = 'Grab';\n\t        this.parameters = parameters;\n\t    };\n\t\n\t    node.RemoveStone.prototype.interpret = function (context) {\n\t        try {\n\t            context.board().removeStone(this.parameters[0].eval(context));\n\t        } catch (err) {\n\t            err.on = this.token;\n\t            throw err;\n\t        }\n\t        return context;\n\t    };\n\t\n\t    node.PutStone = function (token, parameters) {\n\t        this.token = token;\n\t        this.arity = constants.STM;\n\t        this.alias = 'Drop';\n\t        this.parameters = parameters;\n\t    };\n\t\n\t    node.PutStone.prototype.interpret = function (context) {\n\t        context.board().putStone(this.parameters[0].eval(context));\n\t        return context;\n\t    };\n\t\n\t    node.MoveToEdge = function (token, parameters) {\n\t        this.token = token;\n\t        this.arity = constants.STM;\n\t        this.alias = 'MoveToEdge';\n\t        this.parameters = parameters;\n\t    };\n\t\n\t    node.MoveToEdge.prototype.interpret = function (context) {\n\t        context.board().moveToEdge(this.parameters[0].eval(context));\n\t        return context;\n\t    };\n\t\n\t    node.CleanBoard = function (token, parameters) {\n\t        this.token = token;\n\t        this.arity = constants.STM;\n\t        this.alias = 'CleanBoard';\n\t        this.parameters = parameters;\n\t    };\n\t\n\t    node.CleanBoard.prototype.interpret = function (context) {\n\t        context.board().clear();\n\t        return context;\n\t    };\n\t\n\t    node.Boom = function (token) {\n\t        this.token = token;\n\t        this.arity = constants.STM;\n\t        this.alias = 'BOOM';\n\t    };\n\t\n\t    node.Boom.prototype.interpret = function (context) {\n\t        try {\n\t            context.board().boom();\n\t        } catch (err) {\n\t            err.on = node;\n\t            throw err;\n\t        }\n\t        return context;\n\t    };\n\t}\n\t;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (node) {\n\t    node.Program = function (token, body) {\n\t        this.token = token;\n\t        this.alias = 'program';\n\t        this.body = body || [];\n\t    };\n\t\n\t    node.Program.prototype.interpret = function (context) {\n\t        node.interpretBlock(this.body, context);\n\t        return context;\n\t    };\n\t\n\t    node.Root = function (program, declarations) {\n\t        this.alias = 'root';\n\t        this.program = program;\n\t        this.declarations = declarations;\n\t    };\n\t\n\t    node.Root.prototype.interpret = function (context) {\n\t        this.program.interpret(context);\n\t        return context;\n\t    };\n\t}\n\t;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (node) {\n\t    node.While = function (token, expression, body) {\n\t        this.alias = 'while';\n\t        this.token = token;\n\t        this.expression = expression;\n\t        this.body = body;\n\t    };\n\t\n\t    node.While.prototype.interpret = function (context) {\n\t        while (this.expression.eval(context)) {\n\t            node.interpretBlock(this.body, context);\n\t        }\n\t        return context;\n\t    };\n\t\n\t    node.Repeat = function (token, expression, body) {\n\t        this.alias = 'repeat';\n\t        this.token = token;\n\t        this.expression = expression;\n\t        this.body = body;\n\t    };\n\t\n\t    node.Repeat.prototype.interpret = function (context) {\n\t        var value = this.expression.eval(context);\n\t        for (var i = 0; i < value; i++) {\n\t            node.interpretBlock(this.body, context);\n\t        }\n\t        return context;\n\t    };\n\t\n\t    node.ForEach = function (token, iterator, items, body) {\n\t        this.alias = 'foreach';\n\t        this.token = token;\n\t        this.iterator = iterator;\n\t        this.items = items;\n\t        this.body = body;\n\t    };\n\t\n\t    node.ForEach.prototype.interpret = function (context) {\n\t        for (var i = 0; i < this.items.length; i++) {\n\t            context.put(this.iterator.token.value, this.items[i].eval(context));\n\t            node.interpretBlock(this.body, context);\n\t        }\n\t\n\t        return context;\n\t    };\n\t};\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (node) {\n\t    function evalArguments(context, parameters) {\n\t        var results = [];\n\t        if (parameters) {\n\t            for (var i = 0; i < parameters.length; i++) {\n\t                results.push(parameters[i].eval(context));\n\t            }\n\t        }\n\t        return results;\n\t    }\n\t\n\t    function fillParameters(context, parameters, declaration) {\n\t        // TODO: no se pueden reasignar valores a los parámetros\n\t        if (declaration.parameters) {\n\t            for (var i = 0; i < declaration.parameters.length; i++) {\n\t                context.put(declaration.parameters[i].value, parameters[i]);\n\t            }\n\t        }\n\t    }\n\t\n\t    // TODO: el mundo de las variables, índices y parámetros debe ser disjunto por body!!\n\t\n\t    node.ProcedureCall = function (token, declarationProvider, parameters) {\n\t        this.token = token;\n\t        this.arity = 'routine';\n\t        this.alias = 'ProcedureCall';\n\t        this.name = token.value;\n\t        this.parameters = parameters;\n\t        this.declarationProvider = declarationProvider;\n\t    };\n\t\n\t    node.ProcedureCall.prototype.interpret = function (context) {\n\t        var target = this.declarationProvider();\n\t        if (!target.declaration) {\n\t            throw new node.errors.InterpreterException('El procedimiento ' + this.name + ' no se encuentra definido.', this.node);\n\t        }\n\t        var declaration = target.declaration;\n\t        var parameterValues = evalArguments(context, this.parameters);\n\t        context.startContext();\n\t        fillParameters(context, parameterValues, declaration);\n\t        node.interpretBlock(declaration.body, context);\n\t        context.stopContext();\n\t        return context;\n\t    };\n\t\n\t    node.FunctionCall = function (token, declarationProvider, parameters) {\n\t        this.token = token;\n\t        this.arity = 'routine';\n\t        this.alias = 'FunctionCall';\n\t        this.name = token.value;\n\t        this.parameters = parameters;\n\t        this.declarationProvider = declarationProvider;\n\t    };\n\t\n\t    node.FunctionCall.prototype.eval = function (context) {\n\t        var target = this.declarationProvider();\n\t        if (!target.declaration) {\n\t            throw new node.errors.InterpreterException('La función \"' + this.name + '\" no se encuentra definida.', this.node);\n\t        }\n\t        var declaration = target.declaration;\n\t        var parameterValues = evalArguments(context, this.parameters);\n\t        context.startContext();\n\t        context.pushBoard();\n\t        fillParameters(context, parameterValues, declaration);\n\t        node.interpretBlock(target.body, context);\n\t        var result = declaration.return.expression.eval(context);\n\t        context.popBoard();\n\t        context.stopContext();\n\t        return result;\n\t    };\n\t}\n\t;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (node) {\n\t    node.ProcedureDeclaration = function (token, parameters, body) {\n\t        this.token = token;\n\t        this.name = token.value;\n\t        this.arity = 'routine';\n\t        this.alias = 'procedureDeclaration';\n\t        this.parameters = parameters || [];\n\t        this.body = body || [];\n\t    };\n\t\n\t    node.FunctionDeclaration = function (token, parameters, body, returnExpression) {\n\t        this.token = token;\n\t        this.name = token.value;\n\t        this.arity = 'routine';\n\t        this.alias = 'functionDeclaration';\n\t        this.parameters = parameters || [];\n\t        this.body = body || [];\n\t        this.return = returnExpression;\n\t    };\n\t\n\t    node.ReturnStatement = function (token, expression) {\n\t        this.token = token;\n\t        this.alias = 'return';\n\t        this.expression = expression;\n\t    };\n\t}\n\t;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (node) {\n\t    node.NotOperation = function (token, expression) {\n\t        this.token = token;\n\t        this.expression = expression;\n\t        this.alias = 'not';\n\t    };\n\t\n\t    node.NotOperation.prototype.eval = function (context) {\n\t        return !this.expression.eval(context);\n\t    };\n\t\n\t    node.SubstractionOperation = function (token, expression) {\n\t        this.token = token;\n\t        this.expression = expression;\n\t        this.alias = '-';\n\t    };\n\t\n\t    node.SubstractionOperation.prototype.eval = function (context) {\n\t        return -this.expression.eval(context);\n\t    };\n\t}\n\t;\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (node) {\n\t    node.Variable = function (token, id) {\n\t        this.token = token;\n\t        this.value = id;\n\t    };\n\t\n\t    node.Variable.prototype.eval = function (context) {\n\t        return context.get(this.value);\n\t    };\n\t\n\t    return node;\n\t};\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\tvar doNothing = function () {\n\t};\n\t\n\tmodule.exports = (console && console.log) ? console.log : doNothing;\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t    splitByLines: function (string) {\n\t        return string.split(/\\r\\n|\\r|\\n/);\n\t    },\n\t\n\t    scan: function (string, regExp) {\n\t        if (!regExp.global) {\n\t            throw new Error('The regExp must be global (with \"g\" flag)');\n\t        }\n\t        var m = [];\n\t        var r = m;\n\t        m = regExp.exec(string);\n\t        while (m) {\n\t            m.shift();\n\t            r.push(m);\n\t            m = regExp.exec(string);\n\t        }\n\t        return r;\n\t    }\n\t};\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// index.umd.min.js"," \tvar parentHotUpdateCallback = this[\"webpackHotUpdategsWeblangCore\"];\n \tthis[\"webpackHotUpdategsWeblangCore\"] = function webpackHotUpdateCallback(chunkId, moreModules) { // eslint-disable-line no-unused-vars\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif(parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t}\n\n \tfunction hotDownloadUpdateChunk(chunkId) { // eslint-disable-line no-unused-vars\n \t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.type = \"text/javascript\";\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\n \t\thead.appendChild(script);\n \t}\n\n \tfunction hotDownloadManifest(callback) { // eslint-disable-line no-unused-vars\n \t\tif(typeof XMLHttpRequest === \"undefined\")\n \t\t\treturn callback(new Error(\"No browser support\"));\n \t\ttry {\n \t\t\tvar request = new XMLHttpRequest();\n \t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\n \t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\trequest.timeout = 10000;\n \t\t\trequest.send(null);\n \t\t} catch(err) {\n \t\t\treturn callback(err);\n \t\t}\n \t\trequest.onreadystatechange = function() {\n \t\t\tif(request.readyState !== 4) return;\n \t\t\tif(request.status === 0) {\n \t\t\t\t// timeout\n \t\t\t\tcallback(new Error(\"Manifest request to \" + requestPath + \" timed out.\"));\n \t\t\t} else if(request.status === 404) {\n \t\t\t\t// no update available\n \t\t\t\tcallback();\n \t\t\t} else if(request.status !== 200 && request.status !== 304) {\n \t\t\t\t// other failure\n \t\t\t\tcallback(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t} else {\n \t\t\t\t// success\n \t\t\t\ttry {\n \t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t} catch(e) {\n \t\t\t\t\tcallback(e);\n \t\t\t\t\treturn;\n \t\t\t\t}\n \t\t\t\tcallback(null, update);\n \t\t\t}\n \t\t};\n \t}\n\n\n \t// Copied from https://github.com/facebook/react/blob/bef45b0/src/shared/utils/canDefineProperty.js\n \tvar canDefineProperty = false;\n \ttry {\n \t\tObject.defineProperty({}, \"x\", {\n \t\t\tget: function() {}\n \t\t});\n \t\tcanDefineProperty = true;\n \t} catch(x) {\n \t\t// IE will fail on defineProperty\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \tvar hotCurrentHash = \"a076ff5ad545c7245000\"; // eslint-disable-line no-unused-vars\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentParents = []; // eslint-disable-line no-unused-vars\n\n \tfunction hotCreateRequire(moduleId) { // eslint-disable-line no-unused-vars\n \t\tvar me = installedModules[moduleId];\n \t\tif(!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif(me.hot.active) {\n \t\t\t\tif(installedModules[request]) {\n \t\t\t\t\tif(installedModules[request].parents.indexOf(moduleId) < 0)\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\tif(me.children.indexOf(request) < 0)\n \t\t\t\t\t\tme.children.push(request);\n \t\t\t\t} else hotCurrentParents = [moduleId];\n \t\t\t} else {\n \t\t\t\tconsole.warn(\"[HMR] unexpected require(\" + request + \") from disposed module \" + moduleId);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tfor(var name in __webpack_require__) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(__webpack_require__, name)) {\n \t\t\t\tif(canDefineProperty) {\n \t\t\t\t\tObject.defineProperty(fn, name, (function(name) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\tconfigurable: true,\n \t\t\t\t\t\t\tenumerable: true,\n \t\t\t\t\t\t\tget: function() {\n \t\t\t\t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t\t\t\t},\n \t\t\t\t\t\t\tset: function(value) {\n \t\t\t\t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t};\n \t\t\t\t\t}(name)));\n \t\t\t\t} else {\n \t\t\t\t\tfn[name] = __webpack_require__[name];\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\tfunction ensure(chunkId, callback) {\n \t\t\tif(hotStatus === \"ready\")\n \t\t\t\thotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\t__webpack_require__.e(chunkId, function() {\n \t\t\t\ttry {\n \t\t\t\t\tcallback.call(null, fn);\n \t\t\t\t} finally {\n \t\t\t\t\tfinishChunkLoading();\n \t\t\t\t}\n\n \t\t\t\tfunction finishChunkLoading() {\n \t\t\t\t\thotChunksLoading--;\n \t\t\t\t\tif(hotStatus === \"prepare\") {\n \t\t\t\t\t\tif(!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif(hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t});\n \t\t}\n \t\tif(canDefineProperty) {\n \t\t\tObject.defineProperty(fn, \"e\", {\n \t\t\t\tenumerable: true,\n \t\t\t\tvalue: ensure\n \t\t\t});\n \t\t} else {\n \t\t\tfn.e = ensure;\n \t\t}\n \t\treturn fn;\n \t}\n\n \tfunction hotCreateModule(moduleId) { // eslint-disable-line no-unused-vars\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif(typeof dep === \"undefined\")\n \t\t\t\t\thot._selfAccepted = true;\n \t\t\t\telse if(typeof dep === \"function\")\n \t\t\t\t\thot._selfAccepted = dep;\n \t\t\t\telse if(typeof dep === \"object\")\n \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback;\n \t\t\t\telse\n \t\t\t\t\thot._acceptedDependencies[dep] = callback;\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif(typeof dep === \"undefined\")\n \t\t\t\t\thot._selfDeclined = true;\n \t\t\t\telse if(typeof dep === \"number\")\n \t\t\t\t\thot._declinedDependencies[dep] = true;\n \t\t\t\telse\n \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif(idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif(!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif(idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor(var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailibleFilesMap = {};\n \tvar hotCallback;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = (+id) + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply, callback) {\n \t\tif(hotStatus !== \"idle\") throw new Error(\"check() is only allowed in idle status\");\n \t\tif(typeof apply === \"function\") {\n \t\t\thotApplyOnUpdate = false;\n \t\t\tcallback = apply;\n \t\t} else {\n \t\t\thotApplyOnUpdate = apply;\n \t\t\tcallback = callback || function(err) {\n \t\t\t\tif(err) throw err;\n \t\t\t};\n \t\t}\n \t\thotSetStatus(\"check\");\n \t\thotDownloadManifest(function(err, update) {\n \t\t\tif(err) return callback(err);\n \t\t\tif(!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\tcallback(null, null);\n \t\t\t\treturn;\n \t\t\t}\n\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotAvailibleFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\tfor(var i = 0; i < update.c.length; i++)\n \t\t\t\thotAvailibleFilesMap[update.c[i]] = true;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\thotCallback = callback;\n \t\t\thotUpdate = {};\n \t\t\tvar chunkId = 0;\n \t\t\t{ // eslint-disable-line no-lone-blocks\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif(hotStatus === \"prepare\" && hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t});\n \t}\n\n \tfunction hotAddUpdateChunk(chunkId, moreModules) { // eslint-disable-line no-unused-vars\n \t\tif(!hotAvailibleFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor(var moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif(!hotAvailibleFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar callback = hotCallback;\n \t\thotCallback = null;\n \t\tif(!callback) return;\n \t\tif(hotApplyOnUpdate) {\n \t\t\thotApply(hotApplyOnUpdate, callback);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor(var id in hotUpdate) {\n \t\t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tcallback(null, outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options, callback) {\n \t\tif(hotStatus !== \"ready\") throw new Error(\"apply() is only allowed in ready status\");\n \t\tif(typeof options === \"function\") {\n \t\t\tcallback = options;\n \t\t\toptions = {};\n \t\t} else if(options && typeof options === \"object\") {\n \t\t\tcallback = callback || function(err) {\n \t\t\t\tif(err) throw err;\n \t\t\t};\n \t\t} else {\n \t\t\toptions = {};\n \t\t\tcallback = callback || function(err) {\n \t\t\t\tif(err) throw err;\n \t\t\t};\n \t\t}\n\n \t\tfunction getAffectedStuff(module) {\n \t\t\tvar outdatedModules = [module];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice();\n \t\t\twhile(queue.length > 0) {\n \t\t\t\tvar moduleId = queue.pop();\n \t\t\t\tvar module = installedModules[moduleId];\n \t\t\t\tif(!module || module.hot._selfAccepted)\n \t\t\t\t\tcontinue;\n \t\t\t\tif(module.hot._selfDeclined) {\n \t\t\t\t\treturn new Error(\"Aborted because of self decline: \" + moduleId);\n \t\t\t\t}\n \t\t\t\tif(moduleId === 0) {\n \t\t\t\t\treturn;\n \t\t\t\t}\n \t\t\t\tfor(var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif(parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn new Error(\"Aborted because of declined dependency: \" + moduleId + \" in \" + parentId);\n \t\t\t\t\t}\n \t\t\t\t\tif(outdatedModules.indexOf(parentId) >= 0) continue;\n \t\t\t\t\tif(parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif(!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push(parentId);\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn [outdatedModules, outdatedDependencies];\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor(var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif(a.indexOf(item) < 0)\n \t\t\t\t\ta.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n \t\tfor(var id in hotUpdate) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tvar moduleId = toModuleId(id);\n \t\t\t\tvar result = getAffectedStuff(moduleId);\n \t\t\t\tif(!result) {\n \t\t\t\t\tif(options.ignoreUnaccepted)\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn callback(new Error(\"Aborted because \" + moduleId + \" is not accepted\"));\n \t\t\t\t}\n \t\t\t\tif(result instanceof Error) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn callback(result);\n \t\t\t\t}\n \t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\taddAllToSet(outdatedModules, result[0]);\n \t\t\t\tfor(var moduleId in result[1]) {\n \t\t\t\t\tif(Object.prototype.hasOwnProperty.call(result[1], moduleId)) {\n \t\t\t\t\t\tif(!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[moduleId], result[1][moduleId]);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor(var i = 0; i < outdatedModules.length; i++) {\n \t\t\tvar moduleId = outdatedModules[i];\n \t\t\tif(installedModules[moduleId] && installedModules[moduleId].hot._selfAccepted)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tvar queue = outdatedModules.slice();\n \t\twhile(queue.length > 0) {\n \t\t\tvar moduleId = queue.pop();\n \t\t\tvar module = installedModules[moduleId];\n \t\t\tif(!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor(var j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tvar cb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor(var j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif(!child) continue;\n \t\t\t\tvar idx = child.parents.indexOf(moduleId);\n \t\t\t\tif(idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tfor(var moduleId in outdatedDependencies) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\n \t\t\t\tvar module = installedModules[moduleId];\n \t\t\t\tvar moduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\tfor(var j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\tvar dependency = moduleOutdatedDependencies[j];\n \t\t\t\t\tvar idx = module.children.indexOf(dependency);\n \t\t\t\t\tif(idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor(var moduleId in appliedUpdate) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor(var moduleId in outdatedDependencies) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\n \t\t\t\tvar module = installedModules[moduleId];\n \t\t\t\tvar moduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\tvar callbacks = [];\n \t\t\t\tfor(var i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\tvar dependency = moduleOutdatedDependencies[i];\n \t\t\t\t\tvar cb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\tif(callbacks.indexOf(cb) >= 0) continue;\n \t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t}\n \t\t\t\tfor(var i = 0; i < callbacks.length; i++) {\n \t\t\t\t\tvar cb = callbacks[i];\n \t\t\t\t\ttry {\n \t\t\t\t\t\tcb(outdatedDependencies);\n \t\t\t\t\t} catch(err) {\n \t\t\t\t\t\tif(!error)\n \t\t\t\t\t\t\terror = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor(var i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tvar moduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch(err) {\n \t\t\t\tif(typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch(err) {\n \t\t\t\t\t\tif(!error)\n \t\t\t\t\t\t\terror = err;\n \t\t\t\t\t}\n \t\t\t\t} else if(!error)\n \t\t\t\t\terror = err;\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif(error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn callback(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\tcallback(null, outdatedModules);\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false,\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: hotCurrentParents,\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(0)(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a076ff5ad545c7245000","var gbs = {};\nvar grammar = require('./grammar/grammar');\ngbs.Parser = require('./grammar/parser');\ngbs.Lexer = require('./lexer/lexer');\ngbs.node = require('./nodes/nodes');\ngbs.errors = require('./utils/errors');\ngbs.Context = require('./model/execution-context');\ngbs.Gbb = {\n    Reader: require('./gbb/gbb-reader')\n};\n\ngbs.getParser = function () {\n    return grammar(gbs);\n};\n\nmodule.exports = gbs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/gbs.js\n// module id = 0\n// module chunks = 0","var log = require('./logger');\n\nvar errors = {};\n\nerrors.throwParserError = function (token, description) {\n    var someError = {error: description, on: token};\n    log('PARSER ERROR: ', someError);\n    throw someError;\n};\n\nerrors.throwInterpreterError = function (token, message) {\n    throw new errors.InterpreterException(message, token);\n};\n\nerrors.InterpreterException = function (message, on) {\n    this.message = message;\n    this.on = on;\n};\nerrors.InterpreterException.prototype = new Error();\n\nmodule.exports = errors;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/errors.js\n// module id = 1\n// module chunks = 0","var GobstonesError = function (message) {\n    this.message = message;\n};\nGobstonesError.prototype = new Error('BOOM');\n\nfunction Board(sizeX, sizeY) {\n    this.x = 0;\n    this.y = 0;\n\n    this.sizeX = sizeX;\n    this.sizeY = sizeY;\n}\n\nBoard.blue = 0;\nBoard.red = 1;\nBoard.black = 2;\nBoard.green = 3;\n\nBoard.north = [0, 1];\nBoard.east = [1, 0];\nBoard.south = [0, -1];\nBoard.west = [-1, 0];\n\nBoard.minDir = Board.north;\nBoard.maxDir = Board.west;\nBoard.minColor = Board.blue;\nBoard.maxColor = Board.green;\n\nBoard.prototype.init = function () {\n    this.table = [[], [], [], []];\n    for (var i = 0; i < this.sizeX; i++) {\n        this.table[0][i] = [];\n        this.table[1][i] = [];\n        this.table[2][i] = [];\n        this.table[3][i] = [];\n        for (var j = 0; j < this.sizeY; j++) {\n            this.table[0][i][j] = 0;\n            this.table[1][i][j] = 0;\n            this.table[2][i][j] = 0;\n            this.table[3][i][j] = 0;\n        }\n    }\n};\n\nBoard.prototype.clone = function () {\n    var c = new Board(this.sizeX, this.sizeY);\n    c.init();\n    for (var i = 0; i < this.sizeX; i++) {\n        c.table[0][i] = [];\n        c.table[1][i] = [];\n        c.table[2][i] = [];\n        c.table[3][i] = [];\n        for (var j = 0; j < this.sizeY; j++) {\n            c.table[0][i][j] = this.table[0][i][j];\n            c.table[1][i][j] = this.table[1][i][j];\n            c.table[2][i][j] = this.table[2][i][j];\n            c.table[3][i][j] = this.table[3][i][j];\n        }\n    }\n    c.x = this.x;\n    c.y = this.y;\n    return c;\n};\n\nBoard.prototype.putStone = function (color) {\n    this.dropStones(color, 1);\n};\n\nBoard.prototype.dropStones = function (color, amount) {\n    this.table[color][this.x][this.y] += amount;\n};\n\nBoard.prototype.removeStone = function (color) {\n    if (this.table[color][this.x][this.y] <= 0) {\n        throw new GobstonesError('Se intentó sacar una bolita pero ya no quedaban bolitas para sacar');\n    }\n    this.table[color][this.x][this.y] -= 1;\n};\n\nBoard.prototype.boom = function () {\n    throw new GobstonesError('BOOM!');\n};\n\nBoard.prototype.clear = function () {\n    this.init();\n};\n\nBoard.prototype.amountStones = function (color) {\n    return this.table[color][this.x][this.y];\n};\n\nBoard.prototype.canMove = function (vec) {\n    var nextX = this.x + vec[0];\n    var nextY = this.y + vec[1];\n    return nextX < this.sizeX && nextX >= 0 && nextY < this.sizeY && nextY >= 0;\n};\n\nBoard.prototype.move = function (vec) {\n    if (!this.canMove(vec)) {\n        throw new GobstonesError('Te caiste del tablero por: x=' + this.x + ' y=' + this.y);\n    }\n    this.x += vec[0];\n    this.y += vec[1];\n};\n\nBoard.prototype.moveToEdge = function (vec) {\n    if (vec[0] === 1) {\n        this.x = this.sizeX - 1;\n    } else if (vec[0] === -1) {\n        this.x = 0;\n    } else if (vec[1] === 1) {\n        this.y = this.sizeY - 1;\n    } else if (vec[1] === -1) {\n        this.y = 0;\n    }\n};\n\nBoard.prototype.printAscii = function () {\n    var out = this.sizeX + 'x' + this.sizeY + '\\n';\n    var az = this.table[0];\n    var ro = this.table[1];\n    var ne = this.table[2];\n    var ve = this.table[3];\n    for (var j = this.sizeY - 1; j >= 0; j--) {\n        for (var i = 0; i < this.sizeX; i++) {\n            out += (az[i][j] || ro[i][j] || ne[i][j] || ve[i][j]) ? '#' : '.';\n        }\n        out += '\\n';\n    }\n    return out;\n};\n\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/model/model.js\n// module id = 2\n// module chunks = 0","var Board = require('../model/model');\nvar stringUtils = require('../utils/string-utils');\n\nvar gbbReader = {\n};\n\ngbbReader.fromString = function (gbbString) {\n    var gbbCode = this._try(gbbString);\n\n    var rawLines = stringUtils.splitByLines(gbbCode);\n    var lines = rawLines.filter(function (line) {\n        return !/^GBB\\/(\\d\\.)+\\d$/.test(line) && line !== '';\n    });\n\n    return this._buildBoard(lines);\n};\n\ngbbReader._buildBoard = function (lines) {\n    var dimensions = this._getDimensions(lines);\n    var header = this._getHeader(lines);\n\n    try {\n        var board = new Board(dimensions[0], dimensions[1]);\n        board.init();\n        this._putCells(lines, board);\n        board.x = header[0];\n        board.y = header[1];\n\n        return board;\n    } catch (err) {\n        var error = new Error('Error building the board');\n        error.inner = err;\n        throw error;\n    }\n};\n\ngbbReader._getDimensions = function (lines) {\n    var dimensions = this._try(\n        lines[0].match(/^size (\\d+) (\\d+)$/)\n    , 'dimensions');\n    return this._getPositionOf(dimensions);\n};\n\ngbbReader._getHeader = function (lines) {\n    var header = this._try(\n        lines[lines.length - 1].match(/^head (\\d+) (\\d+)$/)\n    , 'header');\n    return this._getPositionOf(header);\n};\n\ngbbReader._putCells = function (lines, board) {\n    var CELL_REGEXP = /^cell (\\d+) (\\d+)/;\n\n    var cellLines = lines.filter(function (line) {\n        return CELL_REGEXP.test(line);\n    });\n\n    cellLines.forEach(function (line) {\n        var cell = line.match(CELL_REGEXP);\n        var position = this._getPositionOf(cell, line);\n\n        board.x = position[0];\n        board.y = position[1];\n        this._putBalls(line, board);\n    }.bind(this));\n};\n\ngbbReader._putBalls = function (line, board) {\n    var values = stringUtils.scan(line, /(Azul|Negro|Rojo|Verde) (\\d+)/g);\n    var getAmount = function (color) {\n        var value = values.filter(function (it) {\n            return it[0] === color;\n        });\n        return parseInt((value[0] || {})[1] || 0, 0);\n    };\n\n    board.dropStones(Board.blue, getAmount('Azul'));\n    board.dropStones(Board.black, getAmount('Negro'));\n    board.dropStones(Board.red, getAmount('Rojo'));\n    board.dropStones(Board.green, getAmount('Verde'));\n};\n\ngbbReader._getPositionOf = function (source, element) {\n    source = source || {};\n\n    return [\n        this._try(source[1], element), this._try(source[2], element)\n    ].map(function (it) {\n        return parseInt(it, 0);\n    });\n};\n\ngbbReader._try = function (value, thingToParse) {\n    if (!value) {\n        throw new Error('Error parsing ' + (thingToParse || 'GBB file'));\n    }\n    return value;\n};\n\nmodule.exports = gbbReader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/gbb/gbb-reader.js\n// module id = 3\n// module chunks = 0","var TOKEN_NAMES = require('./reserved-words');\n\nmodule.exports = function (gbs) {\n    var g = new gbs.Parser(new gbs.Lexer());\n    var define = g;\n\n    function commaSeparatedArguments(parser) {\n        var parameters = [];\n        if (parser.token.id !== ')') {\n            for (; ;) {\n                parameters.push(parser.expression(0));\n                if (parser.token.id !== ',') {\n                    break;\n                }\n                parser.advance(',');\n            }\n        }\n        return parameters;\n    }\n\n    function parameterListCall(parser) {\n        parser.advance('(');\n        var parameters = commaSeparatedArguments(parser);\n        parser.advance(')');\n        return parameters;\n    }\n\n    function parameterDeclarationList() {\n        var parameters = [];\n        g.advance('(');\n        if (g.token.id !== ')') {\n            for (; ;) {\n                if (g.token.arity !== 'name') {\n                    g.error(g.token, 'Se esperaba un nombre de parámetro.');\n                }\n                parameters.push(g.token);\n                g.advance();\n                if (g.token.id !== ',') {\n                    break;\n                }\n                g.advance(',');\n            }\n        }\n        g.advance(')');\n        return parameters;\n    }\n\n    function parenthesisExpression() {\n        g.advance('(');\n        var p = g.expression(0);\n        g.advance(')');\n        return p;\n    }\n\n    function bodyStatement() {\n        return g.block() || [];\n    }\n\n    function bodyStatementWithOptionalMultiline() {\n        return (g.token.id === '{') ? bodyStatement() : [g.statement()];\n    }\n\n    function defineConstant(symbol, alias, value, type) {\n        var token = g.symbol(symbol);\n        token.nud = function () {\n            return new gbs.node.Constant(token, alias, value, type);\n        };\n    }\n\n    define.symbol('(end)');\n    define.symbol('(literal)').nud = function () {\n        return new gbs.node.NumericLiteral(this, this.value);\n    };\n\n    define.symbol('(name)').nud = function () {\n        return new gbs.node.Variable(this, this.value);\n    };\n\n    define.op('||', 20, gbs.node.OrOperation);\n    define.op('&&', 25, gbs.node.AndOperation);\n\n    define.op('+', 50, gbs.node.SumOperation);\n    define.op('-', 50, gbs.node.DiffOperation);\n    define.op('*', 60, gbs.node.MulOperation);\n    // TODO: chequear que efectivamente sean no asociativos\n    define.op(TOKEN_NAMES.DIV, 70, gbs.node.DivOperation);\n    define.op(TOKEN_NAMES.MOD, 70, gbs.node.ModOperation);\n\n    define.infixr('^', 80, function (left) {\n        return new gbs.node.ExpOperation(g.token, left, g.expression(80));\n    });\n    // TODO: chequear cómo se comporta el NOT\n    define.prefix(TOKEN_NAMES.NOT, function () {\n        return new gbs.node.NotOperation(g.token, g.expression(70));\n    });\n    define.prefix('-', function () {\n        return new gbs.node.SubstractionOperation(g.token, g.expression(70));\n    });\n\n    define.op('==', 40, gbs.node.EqOperation);\n    define.op('/=', 40, gbs.node.NotEqualOperation);\n    define.op('<', 40, gbs.node.LessOperation);\n    define.op('>', 40, gbs.node.GraterOperation);\n    define.op('<=', 40, gbs.node.LessEqualOperation);\n    define.op('>=', 40, gbs.node.GreaterEqualOperation);\n\n    defineConstant(TOKEN_NAMES.FALSE, 'False', false, TOKEN_NAMES.BOOLEAN);\n    defineConstant(TOKEN_NAMES.TRUE, 'True', true, TOKEN_NAMES.BOOLEAN);\n    defineConstant(TOKEN_NAMES.BLUE, 'Blue', 0, TOKEN_NAMES.COLOR);\n    defineConstant(TOKEN_NAMES.RED, 'Red', 1, TOKEN_NAMES.COLOR);\n    defineConstant(TOKEN_NAMES.BLACK, 'Black', 2, TOKEN_NAMES.COLOR);\n    defineConstant(TOKEN_NAMES.GREEN, 'Green', 3, TOKEN_NAMES.COLOR);\n    defineConstant(TOKEN_NAMES.NORTH, 'North', [0, 1], TOKEN_NAMES.DIRECTION);\n    defineConstant(TOKEN_NAMES.SOUTH, 'South', [0, -1], TOKEN_NAMES.DIRECTION);\n    defineConstant(TOKEN_NAMES.EAST, 'East', [1, 0], TOKEN_NAMES.DIRECTION);\n    defineConstant(TOKEN_NAMES.WEST, 'West', [-1, 0], TOKEN_NAMES.DIRECTION);\n\n    define.symbol(':');\n    define.symbol(')');\n    define.symbol('(');\n    define.symbol('[');\n    define.symbol(']');\n    define.symbol('}');\n    define.symbol(',');\n    define.symbol('->');\n    define.symbol('..');\n    define.symbol(TOKEN_NAMES.IN);\n    define.symbol(TOKEN_NAMES.ELSE);\n    define.symbol(TOKEN_NAMES.TO);\n\n    var separator = {separator: ';'};\n    define.stmt(';', function () {\n        return separator;\n    });\n\n    define.infix('(', 80, function (left) {\n        if (left.token.arity !== 'name') {\n            gbs.errors.throwParserError(left, left.token.value + ' no es una función o procedimiento');\n        }\n        var parameters = commaSeparatedArguments(g);\n        g.advance(')');\n        var node;\n        if (left.token.value[0].toUpperCase() === left.token.value[0]) {\n            node = new gbs.node.ProcedureCall(left.token, function () {\n                return g.scope.find(left.token.value);\n            }, parameters);\n        } else {\n            node = new gbs.node.FunctionCall(left.token, function () {\n                return g.scope.find(left.token.value);\n            }, parameters);\n        }\n        return node;\n    });\n\n    define.infixr(':=', 10, function (left) {\n        if (left.id !== '.' && left.id !== '[' && (!left.token || left.token.arity !== 'name')) {\n            g.error(left, 'Del lado izquierdo de la asignación sólo pueden usarse identificadores');\n        }\n        return new gbs.node.Assignment({}, left, g.expression(9));\n    });\n\n    define.stmt(TOKEN_NAMES.DROP, function () {\n        return new gbs.node.PutStone(g.token, parameterListCall(g));\n    });\n\n    define.stmt(TOKEN_NAMES.GRAB, function () {\n        return new gbs.node.RemoveStone(g.token, parameterListCall(g));\n    });\n\n    define.stmt(TOKEN_NAMES.MOVE, function () {\n        return new gbs.node.MoveClaw(g.token, parameterListCall(g));\n    });\n\n    define.stmt(TOKEN_NAMES.MOVE_TO_EDGE, function () {\n        return new gbs.node.MoveToEdge(g.token, parameterListCall(g));\n    });\n\n    define.stmt(TOKEN_NAMES.CLEAN_BOARD, function () {\n        return new gbs.node.CleanBoard(g.token, parameterListCall(g));\n    });\n\n    define.stmt(TOKEN_NAMES.BOOM, function () {\n        var token = g.token;\n        if (parenthesisExpression(g)) {\n            gbs.errors.throwParserError(token, 'BOOM no lleva parámetros');\n        }\n        return new gbs.node.Boom(token);\n    });\n\n    define.prefix(TOKEN_NAMES.HAS_STONES, function () {\n        return new gbs.node.HasStones(g.token, parameterListCall(g));\n    });\n\n    define.prefix(TOKEN_NAMES.NUM_STONES, function () {\n        return new gbs.node.NumStones(g.token, parameterListCall(g));\n    });\n\n    define.prefix(TOKEN_NAMES.MAX_COLOR, function () {\n        return new gbs.node.MaxColor(g.token, parameterListCall(g));\n    });\n\n    define.prefix(TOKEN_NAMES.MIN_COLOR, function () {\n        return new gbs.node.MinColor(g.token, parameterListCall(g));\n    });\n\n    define.prefix(TOKEN_NAMES.MAX_DIR, function () {\n        return new gbs.node.MaxDir(g.token, parameterListCall(g));\n    });\n\n    define.prefix(TOKEN_NAMES.MIN_DIR, function () {\n        return new gbs.node.MinDir(g.token, parameterListCall(g));\n    });\n\n    define.prefix(TOKEN_NAMES.MAX_BOOL, function () {\n        return new gbs.node.MaxBool(g.token, parameterListCall(g));\n    });\n\n    define.prefix(TOKEN_NAMES.MIN_BOOL, function () {\n        return new gbs.node.MinBool(g.token, parameterListCall(g));\n    });\n\n    define.prefix(TOKEN_NAMES.CAN_MOVE, function () {\n        var id = g.token;\n        var parameters = parameterListCall(g);\n        return new gbs.node.CanMove(id, parameters);\n    });\n\n    define.stmt(TOKEN_NAMES.IF, function () {\n        var token = g.token;\n        g.advance('(');\n        var condition = g.expression(0);\n        g.advance(')');\n        var trueBranch = bodyStatement(g);\n        var falseBranch = null;\n        if (g.token.id === TOKEN_NAMES.ELSE) {\n            g.scope.reserve(g.token);\n            g.advance(TOKEN_NAMES.ELSE);\n            falseBranch = bodyStatement(g);\n        }\n        return new gbs.node.If(token, condition, trueBranch, falseBranch);\n    });\n\n    define.stmt(TOKEN_NAMES.SWITCH, function () {\n        var token = g.token;\n        var condition = parenthesisExpression(g);\n        if (g.token.id === TOKEN_NAMES.TO) {\n            g.advance(TOKEN_NAMES.TO);\n        }\n        g.advance('{');\n        var cases = [];\n        for (; ;) {\n            var exp = g.expression(0);\n            g.advance('->');\n            var body = bodyStatementWithOptionalMultiline(g);\n            cases.push({\n                case: exp,\n                body: body\n            });\n            if (g.token.id === '}' || !g.tokens.hasNext()) {\n                break;\n            }\n        }\n        g.advance('}');\n        return new gbs.node.Switch(token, condition, cases);\n    });\n\n    define.stmt(TOKEN_NAMES.WHILE, function () {\n        return new gbs.node.While(g.token, parenthesisExpression(g), bodyStatement(g));\n    });\n\n    define.stmt(TOKEN_NAMES.REPEAT, function () {\n        return new gbs.node.Repeat(g.token, parenthesisExpression(g), bodyStatement(g));\n    });\n\n    define.stmt(TOKEN_NAMES.FOR_EACH, function () {\n        // foreach dir in [minDir() .. maxDir()]\n        var iterator = g.expression();\n        if (iterator.token.arity !== 'name') {\n            g.error(iterator.token, 'El foreach espera un identificador sobre el cual iterar');\n        }\n        g.advance(TOKEN_NAMES.IN);\n        g.advance('[');\n        var items = commaSeparatedArguments(g);\n        g.advance(']');\n        return new gbs.node.ForEach(g.token, iterator, items, g.block());\n    });\n\n    define.stmt('{', function () {\n        var a = g.statements();\n        g.advance('}');\n        return a;\n    });\n\n    define.stmt('(', function () {\n        var a = g.statements();\n        g.advance(')');\n        return a;\n    });\n\n    define.prefix('(', function () {\n        var expression = g.expression(0);\n        g.advance(')');\n        return expression;\n    });\n\n    define.root(TOKEN_NAMES.PROGRAM, function () {\n        return new gbs.node.Program(g.token, g.block());\n    });\n\n    define.root(TOKEN_NAMES.FUNCTION, function () {\n        g.newScope();\n        var token = g.token;\n        if (g.token.arity === 'name') {\n            if (g.token.value[0] !== g.token.value[0].toLowerCase()) {\n                g.error(token, 'El nombre de la función ' + token.value + ' debe emepzar con minúscula');\n            }\n            g.scope.define(token);\n            g.advance();\n        } else {\n            g.error(token, 'Se esperaba un nombre de función');\n        }\n        var parameters = parameterDeclarationList(g);\n        var body = bodyStatement(g);\n\n        var ret = body.pop();\n        if (!ret || ret.alias !== 'return' || !ret.expression) {\n            g.error(token, 'La función ' + token.value + ' debe terminar con un ' + TOKEN_NAMES.RETURN);\n        }\n        g.scope.pop();\n        var declaration = new gbs.node.FunctionDeclaration(token, parameters, body, ret);\n        token.declaration = declaration;\n        return declaration;\n    });\n\n    define.stmt(TOKEN_NAMES.RETURN, function () {\n        return new gbs.node.ReturnStatement(g.token, parenthesisExpression(g));\n    });\n\n    define.root(TOKEN_NAMES.PROCEDURE, function () {\n        g.newScope();\n        var token = g.token;\n        if (g.token.arity === 'name') {\n            if (g.token.value[0] !== g.token.value[0].toUpperCase()) {\n                g.error(token, 'El nombre del procedimiento ' + token.value + ' debe emepzar con mayúscula');\n            }\n            g.scope.define(token);\n            g.advance();\n        } else {\n            g.error(token, 'Se esperaba un nombre de procedimiento');\n        }\n        var parameters = parameterDeclarationList(g);\n        var body = bodyStatement();\n        g.scope.pop();\n        var declaration = new gbs.node.ProcedureDeclaration(token, parameters, body);\n        token.declaration = declaration;\n        return declaration;\n    });\n\n    define.parse = function (input) {\n        var main;\n        var declarations = [];\n        var roots = g.parseProgram(input);\n        for (var i = 0; i < roots.length; i++) {\n            if (roots[i].alias === 'program') {\n                main = roots[i];\n            } else {\n                declarations.push(roots[i]);\n            }\n        }\n        return new gbs.node.Root(main, declarations);\n    };\n\n    return g;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/grammar/grammar.js\n// module id = 4\n// module chunks = 0","var errors = require('../utils/errors');\nvar Scope = require('./scope');\n\nfunction throwUndefinedSymbolError() {\n    errors.throwParserError(this, 'No definido');\n}\n\nfunction throwMissingOperatorError() {\n    errors.throwParserError(this, 'No se encontró el operador');\n}\n\nvar OriginalSymbol = function () {\n    this.nud = throwUndefinedSymbolError;\n    this.led = throwMissingOperatorError;\n};\n\nvar Parser = function (lexer) {\n    this.scope = null;\n    this.token = null;\n    this.tokens = lexer;\n    this.symbolTable = {};\n};\n\nParser.prototype.symbol = function (id, bindingPower) {\n    var s = this.symbolTable[id];\n    bindingPower = bindingPower || 0;\n    if (s) {\n        if (bindingPower > s.lbp) {\n            s.lbp = bindingPower;\n        }\n    } else {\n        s = new OriginalSymbol();\n        s.id = s.value = id;\n        s.lbp = bindingPower;\n        this.symbolTable[id] = s;\n    }\n    return s;\n};\n\nParser.prototype.expression = function (rightBindingPower) {\n    rightBindingPower = rightBindingPower || 0;\n    var left;\n    var t = this.token;\n    this.advance();\n    left = t.nud();\n    while (rightBindingPower < this.token.lbp) {\n        t = this.token;\n        this.advance();\n        left = t.led(left);\n    }\n    return left;\n};\n\nParser.prototype.error = function (token, message) {\n    errors.throwParserError(token, message);\n};\n\nParser.prototype.newScope = function () {\n    var s = this.scope;\n    this.scope = new Scope(this);\n    this.scope.parent = s;\n    return this.scope;\n};\n\nParser.prototype.advance = function (id) {\n    var a;\n    var o;\n    var t;\n    var v;\n    var tokens = this.tokens;\n    if (id && this.token.id !== id) {\n        if (this.lastToken && this.lastToken.range && this.token.range) {\n            this.token.range.start = this.lastToken.range.start;\n        }\n        errors.throwParserError(this.token, 'Se esperaba \"' + id + '\" pero se encontró \"' + this.token.value + '\"');\n    }\n    if (!tokens.hasNext()) {\n        var lastRange = this.token.range;\n        this.token = this.symbolTable['(end)'];\n        this.token.range = lastRange;\n        return this.token;\n    }\n    t = tokens.next();\n    v = t.value;\n    a = t.type;\n    if (a === 'name') {\n        o = this.scope.find(v);\n        if (o.arity === 'routine') {\n            // force late binding\n            o = this.symbolTable['(name)'];\n        }\n    } else if (a === 'operator') {\n        o = this.symbolTable[v];\n        if (!o) {\n            errors.throwParserError(t, 'Unknown operator.');\n        }\n    } else if (a === 'number') {\n        o = this.symbolTable['(literal)'];\n        a = 'literal';\n        v = parseInt(v, 10);\n    } else {\n        errors.throwParserError(t, 'Unexpected token.');\n    }\n\n    var token = Object.create(o);\n    token.range = t.range;\n    token.value = v;\n    token.arity = a;\n    this.lastToken = this.token;\n    this.token = token;\n    return token;\n};\n\nParser.prototype.op = function (id, bp, OpDefinition) {\n    var parser = this;\n    var s = this.symbol(id, bp);\n    s.led = function (left) {\n        return new OpDefinition(this, left, parser.expression(bp));\n    };\n    return s;\n};\n\nParser.prototype.statement = function () {\n    var n = this.token;\n    var v;\n    if (n.std) {\n        this.advance();\n        this.scope.reserve(n);\n        return n.std();\n    }\n    v = this.expression(0);\n    if (v.alias !== ':=' && v.id !== '(' && v.arity !== 'routine') {\n        errors.throwParserError(v, 'Bad expression statement.');\n    }\n    return v;\n};\n\nParser.prototype.statements = function () {\n    var statementsList = [];\n    var symbol;\n    for (; ;) {\n        if (this.token.id === '}' || this.token.id === '(end)') {\n            break;\n        }\n        var range = this._currentRange();\n        symbol = this.statement();\n        if (symbol && !symbol.separator) {\n            this._applyRangeToSymbol(range, symbol);\n            statementsList.push(symbol);\n        }\n    }\n    if (statementsList.length === 0) {\n        return null;\n    }\n    return statementsList;\n};\n\nParser.prototype._applyRangeToSymbol = function (range, symbol) {\n    symbol.range = range;\n    if (this.token.range && this.token.range.end) {\n        range.end = this.token.range.end;\n    }\n};\n\nParser.prototype.rootDeclaration = function () {\n    var n = this.token;\n    if (!n.root) {\n        errors.throwParserError(n, 'Se esperaba una definición de programa, función o procedimiento.');\n    }\n    this.advance();\n    this.scope.reserve(n);\n    return n.root();\n};\n\nParser.prototype.stmt = function (symbol, f) {\n    var x = this.symbol(symbol);\n    x.std = f;\n    return x;\n};\n\nParser.prototype.infix = function (id, bp, led) {\n    var s = this.symbol(id, bp);\n    var self = this;\n    s.led = led || function (left) {\n        this.left = left;\n        this.right = self.expression(bp);\n        this.arity = 'binary';\n        return this;\n    };\n    return s;\n};\n\nParser.prototype.infixr = function (id, bp, led) {\n    var s = this.symbol(id, bp);\n    var self = this;\n    s.led = led || function (left) {\n        this.left = left;\n        this.right = self.expression(bp - 1);\n        this.arity = 'binary';\n        return this;\n    };\n    return s;\n};\n\nParser.prototype.prefix = function (id, nud) {\n    var s = this.symbol(id);\n    var self = this;\n    s.nud = nud || function () {\n        self.scope.reserve(this);\n        this.left = self.expression(70);\n        this.arity = 'unary';\n        return this;\n    };\n    return s;\n};\n\nParser.prototype.root = function (symbol, f) {\n    var x = this.symbol(symbol);\n    x.root = f;\n    return x;\n};\n\nParser.prototype.block = function () {\n    var t = this.token;\n    this.advance('{');\n    return t.std();\n};\n\nParser.prototype._currentRange = function () {\n    return {start: this.token.range.start, end: this.token.range.end};\n};\n\nParser.prototype.roots = function () {\n    var roots = [];\n    var symbol;\n    for (; ;) {\n        if (this.token.id === '(end)') {\n            break;\n        }\n        var range = this._currentRange();\n        symbol = this.rootDeclaration();\n        if (symbol) {\n            this._applyRangeToSymbol(range, symbol);\n            roots.push(symbol);\n        }\n    }\n    if (roots.length === 0) {\n        return null;\n    }\n    return roots;\n};\n\nParser.prototype._parseContextAwareNode = function (input, nodeParser) {\n    this.tokens.input(input);\n    this.newScope();\n    this.advance();\n    var s = nodeParser();\n    this.advance('(end)');\n    this.scope.pop();\n    return s;\n};\n\nParser.prototype.parseExpression = function (input) {\n    var self = this;\n    return this._parseContextAwareNode(input, function () {\n        return self.expression(0);\n    });\n};\n\nParser.prototype.parseProgram = function (input) {\n    var self = this;\n    return this._parseContextAwareNode(input, function () {\n        return self.roots();\n    });\n};\n\nParser.prototype.parseStatements = function (input) {\n    var self = this;\n    return this._parseContextAwareNode(input, function () {\n        return self.statements();\n    });\n};\n\nmodule.exports = Parser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/grammar/parser.js\n// module id = 5\n// module chunks = 0","var TOKEN_NAMES = {\n    PROGRAM: 'program',\n    PROCEDURE: 'procedure',\n    FUNCTION: 'function',\n    RETURN: 'return',\n    DROP: 'Poner',\n    MOVE: 'Mover',\n    GRAB: 'Sacar',\n    BOOM: 'BOOM',\n    MOVE_TO_EDGE: 'IrAlBorde',\n    CLEAN_BOARD: 'VaciarTablero',\n    REPEAT: 'repeat',\n    WHILE: 'while',\n    FOR_EACH: 'foreach',\n    IN: 'in',\n    IF: 'if',\n    THEN: 'then',\n    ELSE: 'else',\n    SWITCH: 'switch',\n    TO: 'to',\n    OPPOSITE: 'opuesto',\n    NEXT: 'siguiente',\n    PREVIOUS: 'previo',\n    DIV: 'div',\n    MOD: 'mod',\n    NOT: 'not',\n    HAS_STONES: 'hayBolitas',\n    CAN_MOVE: 'puedeMover',\n    NUM_STONES: 'nroBolitas',\n    MIN_DIR: 'minDir',\n    MAX_DIR: 'maxDir',\n    MIN_COLOR: 'minColor',\n    MAX_COLOR: 'maxColor',\n    MIN_BOOL: 'minBool',\n    MAX_BOOL: 'maxBool',\n    RED: 'Rojo',\n    BLUE: 'Azul',\n    BLACK: 'Negro',\n    GREEN: 'Verde',\n    TRUE: 'True',\n    FALSE: 'False',\n    NORTH: 'Norte',\n    SOUTH: 'Sur',\n    EAST: 'Este',\n    WEST: 'Oeste',\n    BOOLEAN: 'Booleano',\n    COLOR: 'Color',\n    DIRECTION: 'Dirección',\n    NUMBER: 'Número'\n};\n\nmodule.exports = TOKEN_NAMES;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/grammar/reserved-words.js\n// module id = 6\n// module chunks = 0","var errors = require('../utils/errors');\n\nfunction itself() {\n    return this;\n}\n\nvar Scope = function (parser) {\n    this.parser = parser;\n    this.def = {};\n};\n\nScope.prototype.define = function (identifier) {\n    var t = this.def[identifier.value];\n    if (typeof t === 'object') {\n        errors.throwParserError(identifier, t.reserved ? 'Already reserved.' : 'Already defined.');\n    }\n    this.def[identifier.value] = identifier;\n    identifier.reserved = false;\n    identifier.nud = itself;\n    identifier.led = null;\n    identifier.std = null;\n    identifier.lbp = 0;\n    identifier.scope = this.parser.scope;\n    return identifier;\n};\n\nScope.prototype.find = function (name) {\n    var e = this;\n    var targetToken;\n    for (; ;) {\n        targetToken = e.def[name];\n        if (targetToken && typeof targetToken !== 'function') {\n            return e.def[name];\n        }\n        e = e.parent;\n        if (!e) {\n            targetToken = this.parser.symbolTable[name];\n            return targetToken && typeof targetToken !== 'function' ? targetToken : this.parser.symbolTable['(name)'];\n        }\n    }\n};\n\nScope.prototype.pop = function () {\n    this.scope = this.parent;\n};\n\nScope.prototype.reserve = function (name) {\n    if (name.arity !== 'name' || name.reserved) {\n        return;\n    }\n    var t = this.def[name.value];\n    if (t) {\n        if (t.reserved) {\n            return;\n        }\n        if (t.arity === 'name') {\n            name.error('Already defined.');\n        }\n    }\n    this.def[name.value] = name;\n    name.reserved = true;\n};\n\nmodule.exports = Scope;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/grammar/scope.js\n// module id = 7\n// module chunks = 0","function Lexer(prefix, suffix) {\n    // Current reading position\n    this.from = 0;\n    this.startColumn = 0;\n    this.endColumn = 0;\n    this.row = 0;\n    this.prefix = prefix || '/=-<>:|&.';\n    this.suffix = suffix || '=|&>.';\n\n    this.punctuators = '/+-*^.:|&;,()<>{}[]=';\n\n    // Look ahead position\n    this.i = 0;\n\n    this.buf = null;\n    this.buflen = 0;\n}\n\nLexer.prototype.hasNext = function () {\n    this._skipNonTokens();\n    return this.from < this.buflen;\n};\n\nLexer.prototype.input = function (buf) {\n    this.from = 0;\n    this.i = 0;\n    this.startColumn = 0;\n    this.endColumn = 0;\n    this.row = 0;\n    this.buf = buf;\n    this.buflen = buf.length;\n    this.current = null;\n    this.nextChar = null;\n};\n\nvar TokenTypes = {\n    IDENTIFIER: 'name',\n    OPERATOR: 'operator',\n    EOF: 'eof',\n    COMMENT: 'comment',\n    NUMBER: 'number',\n    NEWLINE: 'newline'\n};\n\n/**\n * This method is highly procedural for performance reasons.\n * There is no need for the lexer to be too flexible, since the\n * semantics will be associated to identifiers on the parser.\n *\n * @returns Token. The next token on the buffer, or null if the buffer is empty.\n */\nLexer.prototype.next = function () {\n    do {\n        this._skipNonTokens();\n        this._refreshCurrentAndNextChars();\n\n        if (this.from >= this.buflen) {\n            return null;\n        }\n    } while (this._processComment());\n\n    // Always add cases in descending order of occurrence probability\n    if (this._processIdentifier()) {\n        return this._consume(TokenTypes.IDENTIFIER);\n    } else if (this._processOperator()) {\n        return this._consume(TokenTypes.OPERATOR);\n    } else if (this._processNumber()) {\n        return this._consume(TokenTypes.NUMBER);\n    }\n    return this._processError();\n};\n\n// PRIVATE\n\nfunction error(token, description) {\n    return {error: description, on: token};\n}\n\nLexer.prototype._make = function (type, value) {\n    return {\n        type: type,\n        value: value,\n        range: {\n            start: {row: this.row, column: this.startColumn},\n            end: {row: this.row, column: this.endColumn}\n        }\n    };\n};\n\nLexer.prototype._consume = function (type) {\n    var text = this.buf.substring(this.from, this.i);\n    var newToken = this._make(type, text);\n    this.from = this.i;\n    this.startColumn = this.endColumn;\n    return newToken;\n};\n\nLexer.prototype._refreshCurrentAndNextChars = function () {\n    this.current = this.buf.charAt(this.from);\n    this.nextChar = this.buf.charAt(this.from + 1);\n};\n\nLexer.prototype._processOperator = function () {\n    if (this.punctuators.indexOf(this.current) >= 0) {\n        this._increaseFrom();\n        this._processMultiCharOperator();\n        return true;\n    }\n    return false;\n};\n\nLexer.prototype._processMultiCharOperator = function () {\n    if (this.prefix.indexOf(this.current) >= 0 && this.suffix.indexOf(this.nextChar) >= 0) {\n        this._incrementStep();\n    }\n};\n\nLexer.prototype._processNumber = function () {\n    if (_isDigit(this.current)) {\n        this._increaseFrom();\n        while (this.i < this.buflen && _isDigit(this.buf.charAt(this.i))) {\n            this._incrementStep();\n        }\n        return true;\n    }\n    return false;\n};\n\nLexer.prototype._processError = function () {\n    this._increaseFrom();\n    return error('Unmatched token', this._consume('UNMATCHED'));\n};\n\nLexer.prototype._resetColumnCount = function () {\n    this.startColumn = this.endColumn;\n};\n\nLexer.prototype._increaseFrom = function () {\n    this.i = this.from + 1;\n    this.startColumn = this.startColumn + 1;\n    this.endColumn = this.startColumn;\n};\n\nLexer.prototype._incrementStep = function () {\n    this.i++;\n    this.endColumn++;\n};\n\nLexer.prototype._processIdentifier = function () {\n    if (_isAlpha(this.current)) {\n        this._increaseFrom();\n        while (this.i < this.buflen && _isAlphanum(this.buf.charAt(this.i))) {\n            this._incrementStep();\n        }\n        return true;\n    }\n    return false;\n};\n\nLexer.prototype._skipNonTokens = function () {\n    while (this.from < this.buflen) {\n        var c = this.buf.charAt(this.from);\n        if (c === ' ' || c === '\\t' || c === '\\r' || c === '\\n') {\n            if (_isNewline(c)) {\n                this.row += 1;\n                this.endColumn = 0;\n                this.startColumn = 0;\n            } else {\n                this.startColumn++;\n                this.endColumn = this.startColumn;\n            }\n            this.from++;\n            this.i = this.from;\n        } else {\n            break;\n        }\n    }\n};\n\nLexer.prototype._processComment = function () {\n    var chars = this.current + this.nextChar;\n    return this._processSingleLineComment(chars) || this._processMultiLineComment(chars);\n};\n\nLexer.prototype._processSingleLineComment = function (chars) {\n    if (chars === '//') {\n        while (this.i < this.buflen && !_isNewline(this.buf.charAt(this.i))) {\n            this._incrementStep();\n        }\n        this.from = this.i;\n        this.row++;\n        this.startColumn = 0;\n        this.endColumn = 0;\n        return true;\n    }\n};\n\nLexer.prototype._processMultiLineComment = function (chars) {\n    if (chars === '/*') {\n        this._incrementStep();\n        this._incrementStep();\n        while (this.i < this.buflen && this.buf.charAt(this.i) !== '*' && this.buf.charAt(this.i + 1) !== '/') {\n            this._incrementStep();\n            if (_isNewline(this.buf.charAt(this.i))) {\n                this.endColumn = 0;\n            }\n        }\n        this._incrementStep();\n        this._incrementStep();\n        this.from = this.i;\n        this.endColumn = this.startColumn;\n        return true;\n    }\n    return false;\n};\n\nfunction _isNewline(c) {\n    return c === '\\r' || c === '\\n';\n}\n\nfunction _isDigit(c) {\n    return c >= '0' && c <= '9';\n}\n\nfunction _isAlpha(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '_' || c === '\\'';\n}\n\nfunction _isAlphanum(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c === '_' || c === '$';\n}\n\nmodule.exports = Lexer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/lexer/lexer.js\n// module id = 8\n// module chunks = 0","var Board = require('./model');\n\nvar Context = function () {\n    var variablesStack = [];\n    var boardsStack = [];\n    var currentBoard = new Board(9, 9);\n    var currentVariables = {};\n\n    this.init = function () {\n        currentBoard.init();\n    };\n\n    this.nativeRepresentations = function () {\n        return Board;\n    };\n\n    this.board = function () {\n        return currentBoard;\n    };\n\n    this.put = function (key, value) {\n        currentVariables[key] = value;\n    };\n\n    this.get = function (id) {\n        return currentVariables[id];\n    };\n\n    this.all = function () {\n        return currentVariables;\n    };\n\n    this.startContext = function () {\n        variablesStack.push(currentVariables);\n        currentVariables = {};\n    };\n\n    this.stopContext = function () {\n        currentVariables = variablesStack.pop();\n    };\n\n    this.pushBoard = function () {\n        boardsStack.push(currentBoard);\n        currentBoard = currentBoard.clone();\n    };\n\n    this.popBoard = function () {\n        currentBoard = boardsStack.pop();\n    };\n\n    this.init();\n};\n\nmodule.exports = Context;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/model/execution-context.js\n// module id = 9\n// module chunks = 0","module.exports = function (node, constants) {\n    node.Assignment = function (token, left, right) {\n        this.token = token;\n        this.arity = constants.STM;\n        this.alias = ':=';\n        this.left = left;\n        this.right = right;\n    };\n\n    node.Assignment.prototype.interpret = function (context) {\n        context.put(this.left.token.value, this.right.eval(context));\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/nodes/assignment.js\n// module id = 10\n// module chunks = 0","module.exports = function (node, constants) {\n    var BinaryOperation = function (token, left, right, alias) {\n        this.alias = alias;\n        this.token = token;\n        this.left = left;\n        this.right = right;\n        this.arity = constants.BINARY;\n    };\n\n    function defineBinaryOperation(className) {\n        node[className] = function (token, left, right) {\n            BinaryOperation.call(this, token, left, right, className);\n        };\n        node[className].prototype = new BinaryOperation();\n    }\n\n    defineBinaryOperation('SumOperation');\n    node.SumOperation.prototype.eval = function (context) {\n        return this.left.eval(context) + this.right.eval(context);\n    };\n\n    defineBinaryOperation('DiffOperation');\n    node.DiffOperation.prototype.eval = function (context) {\n        return this.left.eval(context) - this.right.eval(context);\n    };\n\n    defineBinaryOperation('MulOperation');\n    node.MulOperation.prototype.eval = function (context) {\n        return this.left.eval(context) * this.right.eval(context);\n    };\n\n    defineBinaryOperation('DivOperation');\n    node.DivOperation.prototype.eval = function (context) {\n        return Math.floor(this.left.eval(context) / this.right.eval(context));\n    };\n\n    defineBinaryOperation('ModOperation');\n    node.ModOperation.prototype.eval = function (context) {\n        return this.left.eval(context) % this.right.eval(context);\n    };\n\n    defineBinaryOperation('ExpOperation');\n    node.ExpOperation.prototype.eval = function (context) {\n        return Math.pow(this.left.eval(context), this.right.eval(context));\n    };\n\n    defineBinaryOperation('AndOperation');\n    node.AndOperation.prototype.eval = function (context) {\n        return this.left.eval(context) && this.right.eval(context);\n    };\n\n    defineBinaryOperation('OrOperation');\n    node.OrOperation.prototype.eval = function (context) {\n        return this.left.eval(context) || this.right.eval(context);\n    };\n\n    defineBinaryOperation('NotEqualOperation');\n    node.NotEqualOperation.prototype.eval = function (context) {\n        return this.left.eval(context) !== this.right.eval(context);\n    };\n\n    defineBinaryOperation('EqOperation');\n    node.EqOperation.prototype.eval = function (context) {\n        return this.left.eval(context) === this.right.eval(context);\n    };\n\n    defineBinaryOperation('LessOperation');\n    node.LessOperation.prototype.eval = function (context) {\n        return this.left.eval(context) < this.right.eval(context);\n    };\n\n    defineBinaryOperation('GraterOperation');\n    node.GraterOperation.prototype.eval = function (context) {\n        return this.left.eval(context) > this.right.eval(context);\n    };\n\n    defineBinaryOperation('LessEqualOperation');\n    node.LessEqualOperation.prototype.eval = function (context) {\n        return this.left.eval(context) <= this.right.eval(context);\n    };\n\n    defineBinaryOperation('GreaterEqualOperation');\n    node.GreaterEqualOperation.prototype.eval = function (context) {\n        return this.left.eval(context) >= this.right.eval(context);\n    };\n}\n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/nodes/binary-operations.js\n// module id = 11\n// module chunks = 0","module.exports = function (node) {\n    node.If = function (token, condition, trueBranch, falseBranch) {\n        this.token = token;\n        this.alias = 'if';\n        this.condition = condition;\n        this.trueBranch = trueBranch;\n        this.falseBranch = falseBranch;\n    };\n\n    node.If.prototype.interpret = function (context) {\n        return node.interpretBlock(this.condition.eval(context) ? this.trueBranch : this.falseBranch, context);\n    };\n\n    node.Switch = function (token, expression, cases) {\n        this.token = token;\n        this.alias = 'switch';\n        this.expression = expression;\n        this.cases = cases;\n    };\n\n    node.Switch.prototype.interpret = function (context) {\n        var value = this.expression.eval(context);\n        for (var i = 0; i < this.cases.length; i++) {\n            if (this.cases[i].case.eval(context) === value) {\n                node.interpretBlock(this.cases[i].body, context);\n                break;\n            }\n        }\n        return context;\n    };\n}\n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/nodes/conditional-statements.js\n// module id = 12\n// module chunks = 0","module.exports = function (node) {\n    node.Constant = function (token, alias, value, type) {\n        this.token = token;\n        this.value = value;\n        this.alias = alias;\n        this.type = type;\n    };\n\n    node.Constant.prototype.eval = function () {\n        return this.value;\n    };\n}\n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/nodes/constant.js\n// module id = 13\n// module chunks = 0","module.exports = function (node, constants) {\n    node.NumericLiteral = function (token, value) {\n        this.token = token;\n        this.value = value;\n        this.alias = constants.NUMERIC_LITERAL;\n    };\n    node.NumericLiteral.prototype.type = 'number';\n\n    node.NumericLiteral.prototype.eval = function () {\n        return this.value;\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/nodes/literals.js\n// module id = 14\n// module chunks = 0","var node = {};\nnode.errors = require('../utils/errors');\n\nvar constants = {\n    STM: 'statement',\n    BINARY: 'binary',\n    EXPRESSION: 'binary',\n    NUMERIC_LITERAL: 'NumericLiteral'\n};\n\nnode.interpretBlock = function (block, context) {\n    block = block || [];\n    for (var i = 0; i < block.length; i++) {\n        block[i].interpret(context);\n    }\n    return context;\n};\n\nrequire('./literals')(node, constants);\nrequire('./constant')(node, constants);\nrequire('./variable')(node, constants);\nrequire('./assignment')(node, constants);\nrequire('./conditional-statements')(node, constants);\nrequire('./binary-operations')(node, constants);\nrequire('./unary-operations')(node, constants);\nrequire('./primitive-functions')(node, constants);\nrequire('./primitive-procedures')(node, constants);\nrequire('./routine-calls')(node, constants);\nrequire('./routine-declarations')(node, constants);\nrequire('./repetition-statements')(node, constants);\nrequire('./program-root')(node, constants);\n\nmodule.exports = node;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/nodes/nodes.js\n// module id = 15\n// module chunks = 0","module.exports = function (node, constants) {\n    node.HasStones = function (token, parameters) {\n        this.token = token;\n        this.arity = constants.EXPRESSION;\n        this.alias = 'hasStones';\n        this.parameters = parameters;\n    };\n\n    node.HasStones.prototype.eval = function (context) {\n        return context.board().amountStones(this.parameters[0].eval(context)) > 0;\n    };\n\n    node.CanMove = function (token, parameters) {\n        this.token = token;\n        this.arity = constants.EXPRESSION;\n        this.alias = 'canMove';\n        this.parameters = parameters;\n    };\n\n    node.CanMove.prototype.eval = function (context) {\n        return context.board().canMove(this.parameters[0].eval(context));\n    };\n\n    node.NumStones = function (token, parameters) {\n        this.token = token;\n        this.arity = constants.EXPRESSION;\n        this.alias = 'numStones';\n        this.parameters = parameters;\n    };\n\n    node.NumStones.prototype.eval = function (context) {\n        return context.board().amountStones(this.parameters[0].eval(context));\n    };\n\n    node.MinDir = function (token, parameters) {\n        this.token = token;\n        this.arity = constants.EXPRESSION;\n        this.alias = 'minDir';\n        this.parameters = parameters;\n    };\n\n    node.MinDir.prototype.eval = function (context) {\n        return context.nativeRepresentations().minDir;\n    };\n\n    node.MaxDir = function (token, parameters) {\n        this.token = token;\n        this.arity = constants.EXPRESSION;\n        this.alias = 'maxDir';\n        this.parameters = parameters;\n    };\n\n    node.MaxDir.prototype.eval = function (context) {\n        return context.nativeRepresentations().maxDir;\n    };\n\n    node.MaxColor = function (token, parameters) {\n        this.token = token;\n        this.arity = constants.EXPRESSION;\n        this.alias = 'maxColor';\n        this.parameters = parameters;\n    };\n\n    node.MaxColor.prototype.eval = function (context) {\n        return context.nativeRepresentations().maxColor;\n    };\n\n    node.MinColor = function (token, parameters) {\n        this.token = token;\n        this.arity = constants.EXPRESSION;\n        this.alias = 'minColor';\n        this.parameters = parameters;\n    };\n\n    node.MinColor.prototype.eval = function (context) {\n        return context.nativeRepresentations().minColor;\n    };\n\n    node.MinBool = function (token, parameters) {\n        this.token = token;\n        this.arity = constants.EXPRESSION;\n        this.alias = 'minBool';\n        this.parameters = parameters;\n    };\n\n    node.MinBool.prototype.eval = function () {\n        return false;\n    };\n\n    node.MaxBool = function (token, parameters) {\n        this.token = token;\n        this.arity = constants.EXPRESSION;\n        this.alias = 'maxBool';\n        this.parameters = parameters;\n    };\n\n    node.MaxBool.prototype.eval = function () {\n        return true;\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/nodes/primitive-functions.js\n// module id = 16\n// module chunks = 0","module.exports = function (node, constants) {\n    node.MoveClaw = function (token, parameters) {\n        this.token = token;\n        this.arity = constants.STM;\n        this.alias = 'MoveClaw';\n        this.parameters = parameters;\n    };\n\n    node.MoveClaw.prototype.interpret = function (context) {\n        try {\n            context.board().move(this.parameters[0].eval(context));\n        } catch (err) {\n            err.on = this.token;\n            throw err;\n        }\n        return context;\n    };\n\n    node.RemoveStone = function (token, parameters) {\n        this.token = token;\n        this.arity = constants.STM;\n        this.alias = 'Grab';\n        this.parameters = parameters;\n    };\n\n    node.RemoveStone.prototype.interpret = function (context) {\n        try {\n            context.board().removeStone(this.parameters[0].eval(context));\n        } catch (err) {\n            err.on = this.token;\n            throw err;\n        }\n        return context;\n    };\n\n    node.PutStone = function (token, parameters) {\n        this.token = token;\n        this.arity = constants.STM;\n        this.alias = 'Drop';\n        this.parameters = parameters;\n    };\n\n    node.PutStone.prototype.interpret = function (context) {\n        context.board().putStone(this.parameters[0].eval(context));\n        return context;\n    };\n\n    node.MoveToEdge = function (token, parameters) {\n        this.token = token;\n        this.arity = constants.STM;\n        this.alias = 'MoveToEdge';\n        this.parameters = parameters;\n    };\n\n    node.MoveToEdge.prototype.interpret = function (context) {\n        context.board().moveToEdge(this.parameters[0].eval(context));\n        return context;\n    };\n\n    node.CleanBoard = function (token, parameters) {\n        this.token = token;\n        this.arity = constants.STM;\n        this.alias = 'CleanBoard';\n        this.parameters = parameters;\n    };\n\n    node.CleanBoard.prototype.interpret = function (context) {\n        context.board().clear();\n        return context;\n    };\n\n    node.Boom = function (token) {\n        this.token = token;\n        this.arity = constants.STM;\n        this.alias = 'BOOM';\n    };\n\n    node.Boom.prototype.interpret = function (context) {\n        try {\n            context.board().boom();\n        } catch (err) {\n            err.on = node;\n            throw err;\n        }\n        return context;\n    };\n}\n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/nodes/primitive-procedures.js\n// module id = 17\n// module chunks = 0","module.exports = function (node) {\n    node.Program = function (token, body) {\n        this.token = token;\n        this.alias = 'program';\n        this.body = body || [];\n    };\n\n    node.Program.prototype.interpret = function (context) {\n        node.interpretBlock(this.body, context);\n        return context;\n    };\n\n    node.Root = function (program, declarations) {\n        this.alias = 'root';\n        this.program = program;\n        this.declarations = declarations;\n    };\n\n    node.Root.prototype.interpret = function (context) {\n        this.program.interpret(context);\n        return context;\n    };\n}\n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/nodes/program-root.js\n// module id = 18\n// module chunks = 0","module.exports = function (node) {\n    node.While = function (token, expression, body) {\n        this.alias = 'while';\n        this.token = token;\n        this.expression = expression;\n        this.body = body;\n    };\n\n    node.While.prototype.interpret = function (context) {\n        while (this.expression.eval(context)) {\n            node.interpretBlock(this.body, context);\n        }\n        return context;\n    };\n\n    node.Repeat = function (token, expression, body) {\n        this.alias = 'repeat';\n        this.token = token;\n        this.expression = expression;\n        this.body = body;\n    };\n\n    node.Repeat.prototype.interpret = function (context) {\n        var value = this.expression.eval(context);\n        for (var i = 0; i < value; i++) {\n            node.interpretBlock(this.body, context);\n        }\n        return context;\n    };\n\n    node.ForEach = function (token, iterator, items, body) {\n        this.alias = 'foreach';\n        this.token = token;\n        this.iterator = iterator;\n        this.items = items;\n        this.body = body;\n    };\n\n    node.ForEach.prototype.interpret = function (context) {\n        for (var i = 0; i < this.items.length; i++) {\n            context.put(this.iterator.token.value, this.items[i].eval(context));\n            node.interpretBlock(this.body, context);\n        }\n\n        return context;\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/nodes/repetition-statements.js\n// module id = 19\n// module chunks = 0","module.exports = function (node) {\n    function evalArguments(context, parameters) {\n        var results = [];\n        if (parameters) {\n            for (var i = 0; i < parameters.length; i++) {\n                results.push(parameters[i].eval(context));\n            }\n        }\n        return results;\n    }\n\n    function fillParameters(context, parameters, declaration) {\n        // TODO: no se pueden reasignar valores a los parámetros\n        if (declaration.parameters) {\n            for (var i = 0; i < declaration.parameters.length; i++) {\n                context.put(declaration.parameters[i].value, parameters[i]);\n            }\n        }\n    }\n\n    // TODO: el mundo de las variables, índices y parámetros debe ser disjunto por body!!\n\n    node.ProcedureCall = function (token, declarationProvider, parameters) {\n        this.token = token;\n        this.arity = 'routine';\n        this.alias = 'ProcedureCall';\n        this.name = token.value;\n        this.parameters = parameters;\n        this.declarationProvider = declarationProvider;\n    };\n\n    node.ProcedureCall.prototype.interpret = function (context) {\n        var target = this.declarationProvider();\n        if (!target.declaration) {\n            throw new node.errors.InterpreterException('El procedimiento ' + this.name + ' no se encuentra definido.', this.node);\n        }\n        var declaration = target.declaration;\n        var parameterValues = evalArguments(context, this.parameters);\n        context.startContext();\n        fillParameters(context, parameterValues, declaration);\n        node.interpretBlock(declaration.body, context);\n        context.stopContext();\n        return context;\n    };\n\n    node.FunctionCall = function (token, declarationProvider, parameters) {\n        this.token = token;\n        this.arity = 'routine';\n        this.alias = 'FunctionCall';\n        this.name = token.value;\n        this.parameters = parameters;\n        this.declarationProvider = declarationProvider;\n    };\n\n    node.FunctionCall.prototype.eval = function (context) {\n        var target = this.declarationProvider();\n        if (!target.declaration) {\n            throw new node.errors.InterpreterException('La función \"' + this.name + '\" no se encuentra definida.', this.node);\n        }\n        var declaration = target.declaration;\n        var parameterValues = evalArguments(context, this.parameters);\n        context.startContext();\n        context.pushBoard();\n        fillParameters(context, parameterValues, declaration);\n        node.interpretBlock(target.body, context);\n        var result = declaration.return.expression.eval(context);\n        context.popBoard();\n        context.stopContext();\n        return result;\n    };\n}\n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/nodes/routine-calls.js\n// module id = 20\n// module chunks = 0","module.exports = function (node) {\n    node.ProcedureDeclaration = function (token, parameters, body) {\n        this.token = token;\n        this.name = token.value;\n        this.arity = 'routine';\n        this.alias = 'procedureDeclaration';\n        this.parameters = parameters || [];\n        this.body = body || [];\n    };\n\n    node.FunctionDeclaration = function (token, parameters, body, returnExpression) {\n        this.token = token;\n        this.name = token.value;\n        this.arity = 'routine';\n        this.alias = 'functionDeclaration';\n        this.parameters = parameters || [];\n        this.body = body || [];\n        this.return = returnExpression;\n    };\n\n    node.ReturnStatement = function (token, expression) {\n        this.token = token;\n        this.alias = 'return';\n        this.expression = expression;\n    };\n}\n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/nodes/routine-declarations.js\n// module id = 21\n// module chunks = 0","module.exports = function (node) {\n    node.NotOperation = function (token, expression) {\n        this.token = token;\n        this.expression = expression;\n        this.alias = 'not';\n    };\n\n    node.NotOperation.prototype.eval = function (context) {\n        return !this.expression.eval(context);\n    };\n\n    node.SubstractionOperation = function (token, expression) {\n        this.token = token;\n        this.expression = expression;\n        this.alias = '-';\n    };\n\n    node.SubstractionOperation.prototype.eval = function (context) {\n        return -this.expression.eval(context);\n    };\n}\n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/nodes/unary-operations.js\n// module id = 22\n// module chunks = 0","module.exports = function (node) {\n    node.Variable = function (token, id) {\n        this.token = token;\n        this.value = id;\n    };\n\n    node.Variable.prototype.eval = function (context) {\n        return context.get(this.value);\n    };\n\n    return node;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/nodes/variable.js\n// module id = 23\n// module chunks = 0","var doNothing = function () {\n};\n\nmodule.exports = (console && console.log) ? console.log : doNothing;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/logger.js\n// module id = 24\n// module chunks = 0","module.exports = {\n    splitByLines: function (string) {\n        return string.split(/\\r\\n|\\r|\\n/);\n    },\n\n    scan: function (string, regExp) {\n        if (!regExp.global) {\n            throw new Error('The regExp must be global (with \"g\" flag)');\n        }\n        var m = [];\n        var r = m;\n        m = regExp.exec(string);\n        while (m) {\n            m.shift();\n            r.push(m);\n            m = regExp.exec(string);\n        }\n        return r;\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/string-utils.js\n// module id = 25\n// module chunks = 0"],"sourceRoot":""}